testMode: "assertion"
prefix: "invariant_"
coverage: true
corpusDir: "echidna"
balanceAddr: 0x1043561a8829300000
balanceContract: 0x1043561a8829300000
# (j=$((0x10)); find src/libraries test/helpers/libraries -type f | sed 's/.*\///' | sed 's/\.sol//' | while read i; do echo -n "($i,$(printf "0x%x" $j)),";j=$((j+1));done)
cryticArgs: ["--compile-libraries=(OfferLibrary,0x10),(Errors,0x11),(Events,0x12),(LoanLibrary,0x13),(UpdateConfig,0x15),(Claim,0x16),(Deposit,0x17),(VariablePool,0x18),(Compensate,0x19),(MoveToVariablePool,0x1a),(BorrowAsMarketOrder,0x1b),(Withdraw,0x1c),(Repay,0x1d),(LiquidateLoan,0x1e),(Initialize,0x1f),(BorrowerExit,0x20),(LendAsLimitOrder,0x21),(LiquidateLoanWithReplacement,0x22),(Common,0x23),(SelfLiquidateLoan,0x24),(LendAsMarketOrder,0x25),(BorrowAsLimitOrder,0x26),(UserLibrary,0x27),(YieldCurveLibrary,0x28),(YieldCurveHelper,0x29)", "--ignore-compile"]
# (j=$((0x10)); find src/libraries test/helpers/libraries -type f  | sed 's/.*\///' | sed 's/\.sol//' | while read i; do echo -n "[\"$(printf "0x%x" $j)\", \"$i\"],";j=$((j+1));done)
deployContracts: [
  ["0x10", "OfferLibrary"],["0x11", "Errors"],["0x12", "Events"],["0x13", "LoanLibrary"],["0x15", "UpdateConfig"],["0x16", "Claim"],["0x17", "Deposit"],["0x18", "VariablePool"],["0x19", "Compensate"],["0x1a", "MoveToVariablePool"],["0x1b", "BorrowAsMarketOrder"],["0x1c", "Withdraw"],["0x1d", "Repay"],["0x1e", "LiquidateLoan"],["0x1f", "Initialize"],["0x20", "BorrowerExit"],["0x21", "LendAsLimitOrder"],["0x22", "LiquidateLoanWithReplacement"],["0x23", "Common"],["0x24", "SelfLiquidateLoan"],["0x25", "LendAsMarketOrder"],["0x26", "BorrowAsLimitOrder"],["0x27", "UserLibrary"],["0x28", "YieldCurveLibrary"],["0x29", "YieldCurveHelper"]
]