testMode: "assertion"
prefix: "invariant_"
coverage: true
corpusDir: "echidna"
balanceAddr: 0x1043561a8829300000
balanceContract: 0x1043561a8829300000
# (j=$((0x10)); find src/libraries test/helpers/libraries -type f | sed 's/.*\///' | sed 's/\.sol//' | while read i; do echo -n "($i,$(printf "0x%x" $j)),";j=$((j+1));done)
cryticArgs: ["--compile-libraries=(Errors,0x10),(UpdateConfig,0x11),(Initialize,0x12),(Events,0x13),(ConversionLibrary,0x14),(Math,0x15),(OfferLibrary,0x16),(FixedLoanLibrary,0x17),(FixedLibrary,0x18),(SelfLiquidateFixedLoan,0x19),(Claim,0x1a),(Deposit,0x1b),(Compensate,0x1c),(MoveToVariablePool,0x1d),(BorrowAsMarketOrder,0x1e),(Withdraw,0x1f),(Repay,0x20),(BorrowerExit,0x21),(LendAsLimitOrder,0x22),(LiquidateFixedLoanWithReplacement,0x23),(LiquidateFixedLoan,0x24),(LendAsMarketOrder,0x25),(BorrowAsLimitOrder,0x26),(UserLibrary,0x27),(YieldCurveLibrary,0x28),(YieldCurveHelper,0x29)", "--foundry-compile-all"]
# (j=$((0x10)); find src/libraries test/helpers/libraries -type f  | sed 's/.*\///' | sed 's/\.sol//' | while read i; do echo -n "[\"$(printf "0x%x" $j)\", \"$i\"],";j=$((j+1));done)
deployContracts: [
  ["0x10", "Errors"],["0x11", "UpdateConfig"],["0x12", "Initialize"],["0x13", "Events"],["0x14", "ConversionLibrary"],["0x15", "Math"],["0x16", "OfferLibrary"],["0x17", "FixedLoanLibrary"],["0x18", "FixedLibrary"],["0x19", "SelfLiquidateFixedLoan"],["0x1a", "Claim"],["0x1b", "Deposit"],["0x1c", "Compensate"],["0x1d", "MoveToVariablePool"],["0x1e", "BorrowAsMarketOrder"],["0x1f", "Withdraw"],["0x20", "Repay"],["0x21", "BorrowerExit"],["0x22", "LendAsLimitOrder"],["0x23", "LiquidateFixedLoanWithReplacement"],["0x24", "LiquidateFixedLoan"],["0x25", "LendAsMarketOrder"],["0x26", "BorrowAsLimitOrder"],["0x27", "UserLibrary"],["0x28", "YieldCurveLibrary"],["0x29", "YieldCurveHelper"]
]