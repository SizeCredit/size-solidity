/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH, WETHInterface } from "../WETH";

const _abi = [
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Deposit",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Withdrawal",
    inputs: [
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ERC20InsufficientAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSpender",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600d81526020016c2bb930b83832b21022ba3432b960991b815250604051806040016040528060048152602001630ae8aa8960e31b81525081600390816100639190610119565b5060046100708282610119565b5050506101d8565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a257607f821691505b6020821081036100c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610114576000816000526020600020601f850160051c810160208610156100f15750805b601f850160051c820191505b81811015610110578281556001016100fd565b5050505b505050565b81516001600160401b0381111561013257610132610078565b61014681610140845461008e565b846100c8565b602080601f83116001811461017b57600084156101635750858301515b600019600386901b1c1916600185901b178555610110565b600085815260208120601f198616915b828110156101aa5788860151825594840194600190910190840161018b565b50858210156101c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610934806101e76000396000f3fe6080604052600436106100a05760003560e01c8063313ce56711610064578063313ce5671461016e57806370a082311461018a57806395d89b41146101c0578063a9059cbb146101d5578063d0e30db0146101f5578063dd62ed3e146101fd57600080fd5b806306fdde03146100b4578063095ea7b3146100df57806318160ddd1461010f57806323b872dd1461012e5780632e1a7d4d1461014e57600080fd5b366100af576100ad610243565b005b600080fd5b3480156100c057600080fd5b506100c9610284565b6040516100d69190610764565b60405180910390f35b3480156100eb57600080fd5b506100ff6100fa3660046107cf565b610316565b60405190151581526020016100d6565b34801561011b57600080fd5b506002545b6040519081526020016100d6565b34801561013a57600080fd5b506100ff6101493660046107f9565b610330565b34801561015a57600080fd5b506100ad610169366004610835565b610354565b34801561017a57600080fd5b50604051601281526020016100d6565b34801561019657600080fd5b506101206101a536600461084e565b6001600160a01b031660009081526020819052604090205490565b3480156101cc57600080fd5b506100c96103ec565b3480156101e157600080fd5b506100ff6101f03660046107cf565b6103fb565b6100ad610243565b34801561020957600080fd5b50610120610218366004610870565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61024d3334610409565b60405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b606060038054610293906108a3565b80601f01602080910402602001604051908101604052809291908181526020018280546102bf906108a3565b801561030c5780601f106102e15761010080835404028352916020019161030c565b820191906000526020600020905b8154815290600101906020018083116102ef57829003601f168201915b5050505050905090565b600033610324818585610444565b60019150505b92915050565b60003361033e858285610456565b6103498585856104d4565b506001949350505050565b61035e3382610533565b60405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a2604051600090339083908381818185875af1925050503d80600081146103d5576040519150601f19603f3d011682016040523d82523d6000602084013e6103da565b606091505b50509050806103e857600080fd5b5050565b606060048054610293906108a3565b6000336103248185856104d4565b6001600160a01b0382166104385760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6103e860008383610565565b610451838383600161068f565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146104ce57818110156104bf57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161042f565b6104ce8484848403600061068f565b50505050565b6001600160a01b0383166104fe57604051634b637e8f60e11b81526000600482015260240161042f565b6001600160a01b0382166105285760405163ec442f0560e01b81526000600482015260240161042f565b610451838383610565565b6001600160a01b03821661055d57604051634b637e8f60e11b81526000600482015260240161042f565b6103e8826000835b6001600160a01b03831661059057806002600082825461058591906108dd565b909155506106029050565b6001600160a01b038316600090815260208190526040902054818110156105e35760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161042f565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661061e5760028054829003905561063d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161068291815260200190565b60405180910390a3505050565b6001600160a01b0384166106b95760405163e602df0560e01b81526000600482015260240161042f565b6001600160a01b0383166106e357604051634a1406b160e11b81526000600482015260240161042f565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156104ce57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161075691815260200190565b60405180910390a350505050565b60006020808352835180602085015260005b8181101561079257858101830151858201604001528201610776565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107ca57600080fd5b919050565b600080604083850312156107e257600080fd5b6107eb836107b3565b946020939093013593505050565b60008060006060848603121561080e57600080fd5b610817846107b3565b9250610825602085016107b3565b9150604084013590509250925092565b60006020828403121561084757600080fd5b5035919050565b60006020828403121561086057600080fd5b610869826107b3565b9392505050565b6000806040838503121561088357600080fd5b61088c836107b3565b915061089a602084016107b3565b90509250929050565b600181811c908216806108b757607f821691505b6020821081036108d757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032a57634e487b7160e01b600052601160045260246000fdfea264697066735822122024d2976ed9eb46347d4a569b7ef43694e996c9d757de4feae376f7d2600489ad64736f6c63430008180033";

type WETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH__factory extends ContractFactory {
  constructor(...args: WETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  override connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
