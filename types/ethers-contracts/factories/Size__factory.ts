/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Size, SizeInterface } from "../Size";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "activeFixedLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsMarketOrderParams",
        components: [
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "virtualCollateralFixedLoanIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowerExit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowerExitParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowerToExitTo",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct ClaimParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateralRatio",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "compensate",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct CompensateParams",
        components: [
          {
            name: "loanToRepayId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "loanToCompensateId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "config",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct InitializeFixedParams",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct DepositParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCredit",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDebt",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFOLAssignedCollateral",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFeeRecipient",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFixedLoan",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct FixedLoan",
        components: [
          {
            name: "faceValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "faceValueExited",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repaid",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "folId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFixedLoanStatus",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum FixedLoanStatus",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFixedLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct FixedLoan[]",
        components: [
          {
            name: "faceValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "faceValueExited",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repaid",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "folId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserView",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct UserView",
        components: [
          {
            name: "user",
            type: "tuple",
            internalType: "struct User",
            components: [
              {
                name: "loanOffer",
                type: "tuple",
                internalType: "struct FixedLoanOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "maxDueDate",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
              {
                name: "borrowOffer",
                type: "tuple",
                internalType: "struct BorrowOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "debtAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVariablePool",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "g",
        type: "tuple",
        internalType: "struct InitializeGeneralParams",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrowAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "f",
        type: "tuple",
        internalType: "struct InitializeFixedParams",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isFOL",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lendAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxDueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lendAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsMarketOrderParams",
        components: [
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateFixedLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateFixedLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateFixedLoanWithReplacement",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateFixedLoanWithReplacementParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "liquidatorProfitBorrowAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "moveToVariablePool",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MoveToVariablePoolParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repay",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct RepayParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "selfLiquidateFixedLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct SelfLiquidateFixedLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "tokens",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract CollateralToken",
      },
      {
        name: "",
        type: "address",
        internalType: "contract BorrowToken",
      },
      {
        name: "",
        type: "address",
        internalType: "contract DebtToken",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateConfig",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct UpdateConfigParams",
        components: [
          {
            name: "key",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct WithdrawParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051613875620001046000396000818161267a015281816126a301526127e901526138756000f3fe6080604052600436106102465760003560e01c80638da5cb5b11610139578063c98e7172116100b6578063da304e4d1161007a578063da304e4d14610769578063e30c397814610789578063f17cc7bf1461079e578063f2fde38b146107be578063f45bf01c146107de578063fee20b78146107fe57600080fd5b8063c98e7172146106bc578063c9dd1f3c146106e9578063ca40742c14610709578063d49dd24f14610729578063d54a49141461074957600080fd5b80639e48cc2b116100fd5780639e48cc2b146105fc578063ac88180f14610611578063ac9650d814610631578063ad3cb1cc1461065e578063aff25c0c1461069c57600080fd5b80638da5cb5b1461052d5780638e5727761461055a5780639a93a40f1461057a5780639cd4aaa81461059c5780639d63848a146105bc57600080fd5b806352d1902d116101c7578063715018a61161018b578063715018a61461046c57806373b5bf0e1461048157806379502c55146104a157806379ba5097146104f8578063872b7d261461050d57600080fd5b806352d1902d146103af5780635c0f0318146103d25780635c7a2a80146103f25780635cbc51eb14610412578063670b7e111461043f57600080fd5b806332e7fdef1161020e57806332e7fdef146103275780633c5654171461034757806340956427146103675780634ccb20c0146103875780634f1ef2861461039c57600080fd5b8063042e02cf1461024b5780630cecbe171461028057806318719d5f146102b55780631dba19c3146102d7578063211a444314610307575b600080fd5b34801561025757600080fd5b5061026b610266366004612c42565b61081e565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b506102a061029b366004612c75565b6108aa565b60408051928352602083019190915201610277565b3480156102c157600080fd5b506102d56102d0366004612ca3565b610a25565b005b3480156102e357600080fd5b506102ec610b89565b60408051938452602084019290925290820152606001610277565b34801561031357600080fd5b5061026b610322366004612cbf565b610cec565b34801561033357600080fd5b5061026b610342366004612cbf565b610dfc565b34801561035357600080fd5b506102d5610362366004612ca3565b610e95565b34801561037357600080fd5b506102d5610382366004612cea565b610fa7565b34801561039357600080fd5b506102ec6111b6565b6102d56103aa366004612d90565b6112d1565b3480156103bb57600080fd5b506103c46112f0565b604051908152602001610277565b3480156103de57600080fd5b506102d56103ed366004612e36565b61130d565b3480156103fe57600080fd5b506102d561040d366004612ca3565b6113b1565b34801561041e57600080fd5b5061043261042d366004612c42565b611455565b6040516102779190612edc565b34801561044b57600080fd5b5061045f61045a366004612cbf565b6117a8565b6040516102779190612f8e565b34801561047857600080fd5b506102d5611852565b34801561048d57600080fd5b506103c461049c366004612ca3565b611866565b3480156104ad57600080fd5b506104b661194d565b6040516102779190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b34801561050457600080fd5b506102d56119b4565b34801561051957600080fd5b506102d5610528366004612fc4565b611a01565b34801561053957600080fd5b50610542611aa5565b6040516001600160a01b039091168152602001610277565b34801561056657600080fd5b506102d5610575366004612c75565b611ada565b34801561058657600080fd5b5061058f611bab565b6040516102779190613123565b3480156105a857600080fd5b506103c46105b7366004612cbf565b611c5d565b3480156105c857600080fd5b50600d54600e54600f54604080516001600160a01b0394851681529284166020840152921691810191909152606001610277565b34801561060857600080fd5b506007546103c4565b34801561061d57600080fd5b506102d561062c366004613183565b611d5d565b34801561063d57600080fd5b5061065161064c36600461319f565b611e06565b6040516102779190613264565b34801561066a57600080fd5b5061068f604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161027791906132c6565b3480156106a857600080fd5b506102d56106b7366004612ca3565b611efb565b3480156106c857600080fd5b506106dc6106d7366004612cbf565b611f9d565b60405161027791906132d9565b3480156106f557600080fd5b506103c4610704366004612cbf565b61207e565b34801561071557600080fd5b506103c4610724366004612c42565b612110565b34801561073557600080fd5b506102d56107443660046132e7565b61215a565b34801561075557600080fd5b506102d561076436600461331c565b6121fe565b34801561077557600080fd5b506103c4610784366004612cbf565b6122fe565b34801561079557600080fd5b50610542612391565b3480156107aa57600080fd5b506102d56107b9366004612ca3565b6123ba565b3480156107ca57600080fd5b506102d56107d9366004612c42565b61247f565b3480156107ea57600080fd5b506102d56107f9366004613183565b612504565b34801561080a57600080fd5b506102d5610819366004613183565b6125ad565b604051630ab0adeb60e31b81526000600482018190526001600160a01b03831660248301529073__$607b1b20eb5a2cd79d73785fca5219dd63$__906355856f5890604401602060405180830381865af4158015610880573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a4919061332e565b92915050565b60405163683d782960e11b8152600090819073__$cb18c7b0f32039a8feafdac4367b2ca82e$__9063d07af052906108e8908490879060040161334b565b60006040518083038186803b15801561090057600080fd5b505af4158015610914573d6000803e3d6000fd5b5050604051630953870960e11b815273__$cb18c7b0f32039a8feafdac4367b2ca82e$__92506312a70e12915061095290600090879060040161334b565b6040805180830381865af415801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190613389565b909250905073__$607b1b20eb5a2cd79d73785fca5219dd63$__6344a8b14760006109c36040870160208801612c42565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015610a0857600080fd5b505af4158015610a1c573d6000803e3d6000fd5b50505050915091565b60405163296e0ffd60e21b815273__$51397d58d1fe776c4f3cf7d2e3707b23e6$__9063a5b83ff490610a5f9060009085906004016133ad565b60006040518083038186803b158015610a7757600080fd5b505af4158015610a8b573d6000803e3d6000fd5b505060405163dde714c560e01b815273__$51397d58d1fe776c4f3cf7d2e3707b23e6$__925063dde714c59150610ac99060009085906004016133ad565b60006040518083038186803b158015610ae157600080fd5b505af4158015610af5573d6000803e3d6000fd5b5073__$607b1b20eb5a2cd79d73785fca5219dd63$__92506344a8b147915060009050610b286040850160208601612c42565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015b60006040518083038186803b158015610b6e57600080fd5b505af4158015610b82573d6000803e3d6000fd5b5050505050565b600d546003546040516370a0823160e01b81526001600160a01b039182166004820152600092839283929116906370a0823190602401602060405180830381865afa158015610bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0091906133e1565b600e546003546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7091906133e1565b600f546003546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a08231906024015b602060405180830381865afa158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce191906133e1565b925092509250909192565b60078054600091829184908110610d0557610d056133fa565b600091825260208083206040805160e0810182526007949094029091018054845260018101549284019290925260028201546001600160a01b0390811684830152600383015416606084018190526004808401546080860152600584015460ff16151560a086015260069093015460c08501529051630ab0adeb60e31b8152918201939093526024810192909252915073__$607b1b20eb5a2cd79d73785fca5219dd63$__906355856f5890604401602060405180830381865af4158015610dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df5919061332e565b9392505050565b600780546000916108a49184908110610e1757610e176133fa565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015260c001516000191490565b60405163010cc09b60e21b815273__$49f84da662e4e8fb3f209f074f056c6127$__90630433026c90610ecf90600090859060040161342f565b60006040518083038186803b158015610ee757600080fd5b505af4158015610efb573d6000803e3d6000fd5b505060405163b8359e9760e01b815273__$49f84da662e4e8fb3f209f074f056c6127$__925063b8359e979150610f3990600090859060040161342f565b60006040518083038186803b158015610f5157600080fd5b505af4158015610f65573d6000803e3d6000fd5b50506040516344a8b14760e01b81526000600482015233602482015273__$607b1b20eb5a2cd79d73785fca5219dd63$__92506344a8b1479150604401610b56565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610fed5750825b905060008267ffffffffffffffff16600114801561100a5750303b155b905081158015611018575080155b156110365760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561106057845460ff60401b1916600160401b1785555b604051630adfa5d160e11b815273__$b462f6a219454e88f475ac21fe8ee88314$__906315bf4ba29061109c906000908b908b90600401613443565b60006040518083038186803b1580156110b457600080fd5b505af41580156110c8573d6000803e3d6000fd5b506110e392506110de9150506020890189612c42565b612656565b6110eb612667565b6110f3612667565b6110fb612667565b604051631a52fb7560e21b815273__$b462f6a219454e88f475ac21fe8ee88314$__9063694bedd490611137906000908b908b90600401613443565b60006040518083038186803b15801561114f57600080fd5b505af4158015611163573d6000803e3d6000fd5b5050505083156111ad57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b600d546005546040516370a0823160e01b81526001600160a01b039182166004820152600092839283929116906370a0823190602401602060405180830381865afa158015611209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122d91906133e1565b600e546005546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d91906133e1565b600f546005546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401610ca0565b6112d961266f565b6112e282612714565b6112ec828261271c565b5050565b60006112fa6127de565b5060008051602061382083398151915290565b604051632cc4a87f60e11b815273__$962131464050f1c8bda76ba1e51b2ec399$__9063598950fe906113479060009085906004016135d6565b60006040518083038186803b15801561135f57600080fd5b505af4158015611373573d6000803e3d6000fd5b505060405163020a460760e61b815273__$962131464050f1c8bda76ba1e51b2ec399$__925063829181c09150610b569060009085906004016135d6565b604051638046123560e01b815273__$4403135f0e9807eb6ca4982c66f6f482e5$__906380461235906113eb90600090859060040161342f565b60006040518083038186803b15801561140357600080fd5b505af4158015611417573d6000803e3d6000fd5b50506040516387e2411560e01b815273__$4403135f0e9807eb6ca4982c66f6f482e5$__92506387e241159150610b5690600090859060040161342f565b61145d612b5e565b604080516001600160a01b0384166000908152600660209081529083902061014083018452805460e084019081526001820154610100850152845160028301805460609581028301860188529682018781529596879660a088019687959487946101208b019491939092849284918401828280156114fa57602002820191906000526020600020905b8154815260200190600101908083116114e6575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561155257602002820191906000526020600020905b81548152602001906001019080831161153e575b505050919092525050509052508152604080518082018252600484018054825282516005860180546020808202840160609081018852968401828152978101979596949590870194849284918401828280156115cd57602002820191906000526020600020905b8154815260200190600101908083116115b9575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561162557602002820191906000526020600020905b815481526020019060010190808311611611575b5050509190925250505090525090525081526001600160a01b0384811660208301819052600d54604080516370a0823160e01b8152600481019390935290930192909116906370a0823190602401602060405180830381865afa158015611690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b491906133e1565b8152600e546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172a91906133e1565b8152600f546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa15801561177c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a091906133e1565b905292915050565b6007805460009173__$607b1b20eb5a2cd79d73785fca5219dd63$__91636a625fd3918491869081106117dd576117dd6133fa565b90600052602060002090600702016040518363ffffffff1660e01b8152600401611811929190918252602082015260400190565b602060405180830381865af415801561182e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a49190613614565b61185a612827565b6118646000612859565b565b6040516303bfc23f60e61b815260009073__$e71249760c0dcf181f72292e4cd7644226$__9063eff08fc0906118a29084908690600401613635565b60006040518083038186803b1580156118ba57600080fd5b505af41580156118ce573d6000803e3d6000fd5b5050604051631263f37d60e21b815273__$e71249760c0dcf181f72292e4cd7644226$__925063498fcdf4915061190c906000908690600401613635565b602060405180830381865af4158015611929573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a491906133e1565b61197f6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b506040805160a08101825260085481526009546020820152600b5491810191909152600c546060820152600a54608082015290565b33806119be612391565b6001600160a01b0316146119f55760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6119fe81612859565b50565b604051634721523f60e11b815273__$dee541f472de99496c9c736fb7527b5e40$__90638e42a47e90611a3b906000908590600401613653565b60006040518083038186803b158015611a5357600080fd5b505af4158015611a67573d6000803e3d6000fd5b5050604051633ebc18a560e01b815273__$dee541f472de99496c9c736fb7527b5e40$__9250633ebc18a59150610f39906000908590600401613653565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b60408051634bc1120160e01b815260006004820152823560248201526020830135604482015290820135606482015273__$3a1d997c5c9678ee6cf109a0d2c3c18352$__90634bc112019060840160006040518083038186803b158015611b4057600080fd5b505af4158015611b54573d6000803e3d6000fd5b5050604080516332f4053b60e01b815260006004820152843560248201526020850135604482015290840135606482015273__$3a1d997c5c9678ee6cf109a0d2c3c18352$__92506332f4053b9150608401610b56565b60078054604080516020808402820181019092528281526060939092909160009084015b82821015611c545760008481526020908190206040805160e08101825260078602909201805483526001808201548486015260028201546001600160a01b03908116938501939093526003820154909216606084015260048101546080840152600581015460ff16151560a08401526006015460c08301529083529092019101611bcf565b50505050905090565b60078054600091829184908110611c7657611c766133fa565b600091825260208083206040805160e08101825260079094029091018054845260018101549284019290925260028201546001600160a01b039081168483015260038301541660608401526004808301546080850152600583015460ff16151560a085015260069092015460c084015251633d87bcf760e21b815291935073__$607b1b20eb5a2cd79d73785fca5219dd63$__9263f61ef3dc92611d1c928691016136e1565b602060405180830381865af4158015611d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df591906133e1565b60405163a2c595c760e01b8152600060048201528135602482015273__$80dbf2b715aebc46a4e9fff973a01f7540$__9063a2c595c79060440160006040518083038186803b158015611daf57600080fd5b505af4158015611dc3573d6000803e3d6000fd5b5050604051630c29914560e41b8152600060048201528335602482015273__$80dbf2b715aebc46a4e9fff973a01f7540$__925063c29914509150604401610b56565b60608167ffffffffffffffff811115611e2157611e21612d20565b604051908082528060200260200182016040528015611e5457816020015b6060815260200190600190039081611e3f5790505b50905060005b82811015611ef457611ec430858584818110611e7857611e786133fa565b9050602002810190611e8a91906136f6565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061289192505050565b828281518110611ed657611ed66133fa565b60200260200101819052508080611eec90613753565b915050611e5a565b5092915050565b6040516210aa0b60e31b815273__$ca83da0f2db4b314a800dde3087d78803f$__906285505890611f33906000908590600401613635565b60006040518083038186803b158015611f4b57600080fd5b505af4158015611f5f573d6000803e3d6000fd5b50506040516364140a8360e01b815273__$ca83da0f2db4b314a800dde3087d78803f$__92506364140a839150610b56906000908590600401613635565b611ff16040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600015158152602001600081525090565b6007805483908110612005576120056133fa565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015292915050565b600780546000916108a49184908110612099576120996133fa565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c08201525190565b60405163046dbd1360e11b81526000600482018190526001600160a01b03831660248301529073__$607b1b20eb5a2cd79d73785fca5219dd63$__906308db7a269060440161190c565b60405163c00a512760e01b815273__$ff994ace3d8552359fc562dad647a82380$__9063c00a51279061219490600090859060040161376c565b60006040518083038186803b1580156121ac57600080fd5b505af41580156121c0573d6000803e3d6000fd5b505060405163af54844160e01b815273__$ff994ace3d8552359fc562dad647a82380$__925063af5484419150610b5690600090859060040161376c565b6040516355e37cf560e11b815273__$efc015e84c43e324693365c393cf32e8b7$__9063abc6f9ea906122389060009085906004016137a0565b60006040518083038186803b15801561225057600080fd5b505af4158015612264573d6000803e3d6000fd5b5050604051635fc2d93160e01b815273__$efc015e84c43e324693365c393cf32e8b7$__9250635fc2d93191506122a29060009085906004016137a0565b60006040518083038186803b1580156122ba57600080fd5b505af41580156122ce573d6000803e3d6000fd5b5073__$607b1b20eb5a2cd79d73785fca5219dd63$__92506344a8b147915060009050610b286020850185612c42565b600780546000916108a49184908110612319576123196133fa565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c0820152612907565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00611aca565b6123c2612827565b60405163e57980dd60e01b815260006004820152813560248201526020820135604482015273__$90998bf69d4187ab28a2073b6c8ec80443$__9063e57980dd9060640160006040518083038186803b15801561241e57600080fd5b505af4158015612432573d6000803e3d6000fd5b5050604051634752b3b360e01b815260006004820152833560248201526020840135604482015273__$90998bf69d4187ab28a2073b6c8ec80443$__9250634752b3b39150606401610b56565b612487612827565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556124cb611aa5565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b604051635792057f60e11b8152600060048201528135602482015273__$9edec1664f5c31c8f0ae1622332fe489b7$__9063af240afe9060440160006040518083038186803b15801561255657600080fd5b505af415801561256a573d6000803e3d6000fd5b50506040516320e9b9f960e11b8152600060048201528335602482015273__$9edec1664f5c31c8f0ae1622332fe489b7$__92506341d373f29150604401610b56565b6040516364f11c5d60e11b8152600060048201528135602482015273__$ad52494b1fdb65a51fe72d163c9d4293f6$__9063c9e238ba9060440160006040518083038186803b1580156125ff57600080fd5b505af4158015612613573d6000803e3d6000fd5b505060405163230c5e2d60e11b8152600060048201528335602482015273__$ad52494b1fdb65a51fe72d163c9d4293f6$__9250634618bc5a9150604401610b56565b61265e61291a565b6119fe81612963565b61186461291a565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806126f657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166126ea600080516020613820833981519152546001600160a01b031690565b6001600160a01b031614155b156118645760405163703e46dd60e11b815260040160405180910390fd5b6119fe612827565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612776575060408051601f3d908101601f19168201909252612773918101906133e1565b60015b61279e57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016119ec565b60008051602061382083398151915281146127cf57604051632a87526960e21b8152600481018290526024016119ec565b6127d98383612995565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118645760405163703e46dd60e11b815260040160405180910390fd5b33612830611aa5565b6001600160a01b0316146118645760405163118cdaa760e01b81523360048201526024016119ec565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b03191681556112ec826129eb565b6060600080846001600160a01b0316846040516128ae91906137f0565b600060405180830381855af49150503d80600081146128e9576040519150601f19603f3d011682016040523d82523d6000602084013e6128ee565b606091505b50915091506128fe858383612a5c565b95945050505050565b602081015181516000916108a49161380c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661186457604051631afcd79f60e31b815260040160405180910390fd5b61296b61291a565b6001600160a01b0381166119f557604051631e4fbdf760e01b8152600060048201526024016119ec565b61299e82612ab1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156129e3576127d98282612891565b6112ec612b16565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b606082612a7157612a6c82612b35565b610df5565b8151158015612a8857506001600160a01b0384163b155b15611ef457604051639996b31560e01b81526001600160a01b03851660048201526024016119ec565b806001600160a01b03163b600003612ae757604051634c9c8ce360e01b81526001600160a01b03821660048201526024016119ec565b60008051602061382083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b34156118645760405163b398979f60e01b815260040160405180910390fd5b805115612b455780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060a00160405280612b71612b9c565b815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b6040518060400160405280612baf612bc1565b8152602001612bbc612bf7565b905290565b60405180606001604052806000815260200160008152602001612bbc604051806040016040528060608152602001606081525090565b604051806040016040528060008152602001612bbc604051806040016040528060608152602001606081525090565b80356001600160a01b0381168114612c3d57600080fd5b919050565b600060208284031215612c5457600080fd5b610df582612c26565b600060608284031215612c6f57600080fd5b50919050565b600060608284031215612c8757600080fd5b610df58383612c5d565b600060408284031215612c6f57600080fd5b600060408284031215612cb557600080fd5b610df58383612c91565b600060208284031215612cd157600080fd5b5035919050565b600060a08284031215612c6f57600080fd5b6000806101408385031215612cfe57600080fd5b612d088484612cd8565b9150612d178460a08501612cd8565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715612d5957612d59612d20565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612d8857612d88612d20565b604052919050565b60008060408385031215612da357600080fd5b612dac83612c26565b915060208084013567ffffffffffffffff80821115612dca57600080fd5b818601915086601f830112612dde57600080fd5b813581811115612df057612df0612d20565b612e02601f8201601f19168501612d5f565b91508082528784828501011115612e1857600080fd5b80848401858401376000848284010152508093505050509250929050565b600060208284031215612e4857600080fd5b813567ffffffffffffffff811115612e5f57600080fd5b612e6b84828501612c5d565b949350505050565b600081518084526020808501945080840160005b83811015612ea357815187529582019590820190600101612e87565b509495945050505050565b6000815160408452612ec36040850182612e73565b9050602083015184820360208601526128fe8282612e73565b60006020808352835160a082850152805160408060c08701528151610100870152838201516101208701528082015191506060610140870152612f23610160870183612eae565b9284015186840360bf190160e088015280518452840151848401829052929150612f4f81830184612eae565b938701516001600160a01b03811682880152939250808701516060870152505060608501516080850152608085015160a0850152809250505092915050565b6020810160048310612fb057634e487b7160e01b600052602160045260246000fd5b91905290565b80151581146119fe57600080fd5b60006020808385031215612fd757600080fd5b823567ffffffffffffffff80821115612fef57600080fd5b9084019060a0828703121561300357600080fd5b61300b612d36565b61301483612c26565b8152838301358482015260408301356040820152606083013561303681612fb6565b606082015260808301358281111561304d57600080fd5b80840193505086601f84011261306257600080fd5b82358281111561307457613074612d20565b8060051b9250613085858401612d5f565b818152928401850192858101908985111561309f57600080fd5b948601945b848610156130bd578535825294860194908601906130a4565b60808401525090979650505050505050565b8051825260208101516020830152604081015160018060a01b03808216604085015280606084015116606085015250506080810151608083015260a0810151151560a083015260c081015160c08301525050565b6020808252825182820181905260009190848201906040850190845b81811015613165576131528385516130cf565b9284019260e0929092019160010161313f565b50909695505050505050565b600060208284031215612c6f57600080fd5b60006020828403121561319557600080fd5b610df58383613171565b600080602083850312156131b257600080fd5b823567ffffffffffffffff808211156131ca57600080fd5b818501915085601f8301126131de57600080fd5b8135818111156131ed57600080fd5b8660208260051b850101111561320257600080fd5b60209290920196919550909350505050565b60005b8381101561322f578181015183820152602001613217565b50506000910152565b60008151808452613250816020860160208601613214565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156132b957603f198886030184526132a7858351613238565b9450928501929085019060010161328b565b5092979650505050505050565b602081526000610df56020830184613238565b60e081016108a482846130cf565b6000602082840312156132f957600080fd5b813567ffffffffffffffff81111561331057600080fd5b612e6b84828501612c91565b600060808284031215612c6f57600080fd5b60006020828403121561334057600080fd5b8151610df581612fb6565b828152813560208083019190915260808201906001600160a01b0390613372908501612c26565b166040830152604083013560608301529392505050565b6000806040838503121561339c57600080fd5b505080516020909101519092909150565b828152813560208083019190915260608201906001600160a01b03906133d4908501612c26565b1660408301529392505050565b6000602082840312156133f357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0361342182612c26565b168252602090810135910152565b82815260608101610df56020830184613410565b83815261016081016001600160a01b038061345d86612c26565b1660208401528061347060208701612c26565b1660408401528061348360408701612c26565b1660608401528061349660608701612c26565b166080840152806134a960808701612c26565b1660a084015250823560c0830152602083013560e0830152604083013561010083015260608301356101208301526080830135610140830152949350505050565b60008235603e1983360301811261350057600080fd5b90910192915050565b6000808335601e1984360301811261352057600080fd5b830160208101925035905067ffffffffffffffff81111561354057600080fd5b8060051b360382131561355257600080fd5b9250929050565b81835260006001600160fb1b0383111561357257600080fd5b8260051b80836020870137939093016020019392505050565b60006135978283613509565b604085526135a9604086018284613559565b9150506135b96020840184613509565b85830360208701526135cc838284613559565b9695505050505050565b828152604060208201528135604082015260208201356060820152600061360060408401846134ea565b606060808401526128fe60a084018261358b565b60006020828403121561362657600080fd5b815160048110610df557600080fd5b82815260608101610df5602083018480358252602090810135910152565b8281526000602060408184015260e0830160018060a01b038551166040850152818501516060850152604085015160808501526060850151151560a0850152608085015160a060c0860152818151808452610100870191508483019350600092505b808310156136d557835182529284019260019290920191908401906136b5565b50979650505050505050565b8281526101008101610df560208301846130cf565b6000808335601e1984360301811261370d57600080fd5b83018035915067ffffffffffffffff82111561372857600080fd5b60200191503681900382131561355257600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016137655761376561373d565b5060010190565b8281526040602082015281356040820152600061378c60208401846134ea565b604060608401526128fe608084018261358b565b82815260a081016001600160a01b036137b884612c26565b166020830152602083013560408301526040830135606083015260608301356137e081612fb6565b8015156080840152509392505050565b60008251613802818460208701613214565b9190910192915050565b818103818111156108a4576108a461373d56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220b14c8b3cb177c6702c1d7fd013c8e241809ccccaff14db09587fcd7f4464452a64736f6c63430008140033";

type SizeConstructorParams =
  | [linkLibraryAddresses: SizeLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SizeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Size__factory extends ContractFactory {
  constructor(...args: SizeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Size__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: SizeLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$607b1b20eb5a2cd79d73785fca5219dd63\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/FixedLibrary.sol:FixedLibrary"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cb18c7b0f32039a8feafdac4367b2ca82e\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/LiquidateFixedLoanWithReplacement.sol:LiquidateFixedLoanWithReplacement"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$51397d58d1fe776c4f3cf7d2e3707b23e6\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/BorrowerExit.sol:BorrowerExit"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$49f84da662e4e8fb3f209f074f056c6127\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/actions/Withdraw.sol:Withdraw"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b462f6a219454e88f475ac21fe8ee88314\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/general/actions/Initialize.sol:Initialize"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$962131464050f1c8bda76ba1e51b2ec399\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/LendAsLimitOrder.sol:LendAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$4403135f0e9807eb6ca4982c66f6f482e5\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/actions/Deposit.sol:Deposit"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e71249760c0dcf181f72292e4cd7644226\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/LiquidateFixedLoan.sol:LiquidateFixedLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$dee541f472de99496c9c736fb7527b5e40\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3a1d997c5c9678ee6cf109a0d2c3c18352\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/Compensate.sol:Compensate"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$80dbf2b715aebc46a4e9fff973a01f7540\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/MoveToVariablePool.sol:MoveToVariablePool"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ca83da0f2db4b314a800dde3087d78803f\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/actions/Repay.sol:Repay"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff994ace3d8552359fc562dad647a82380\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$efc015e84c43e324693365c393cf32e8b7\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/LendAsMarketOrder.sol:LendAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$90998bf69d4187ab28a2073b6c8ec80443\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/general/actions/UpdateConfig.sol:UpdateConfig"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9edec1664f5c31c8f0ae1622332fe489b7\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/actions/Claim.sol:Claim"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ad52494b1fdb65a51fe72d163c9d4293f6\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/SelfLiquidateFixedLoan.sol:SelfLiquidateFixedLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Size> {
    return super.deploy(overrides || {}) as Promise<Size>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Size {
    return super.attach(address) as Size;
  }
  override connect(signer: Signer): Size__factory {
    return super.connect(signer) as Size__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SizeInterface {
    return new utils.Interface(_abi) as SizeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Size {
    return new Contract(address, _abi, signerOrProvider) as Size;
  }
}

export interface SizeLibraryAddresses {
  ["src/libraries/fixed/FixedLibrary.sol:FixedLibrary"]: string;
  ["src/libraries/fixed/actions/LiquidateFixedLoanWithReplacement.sol:LiquidateFixedLoanWithReplacement"]: string;
  ["src/libraries/fixed/actions/BorrowerExit.sol:BorrowerExit"]: string;
  ["src/libraries/fixed/actions/Withdraw.sol:Withdraw"]: string;
  ["src/libraries/general/actions/Initialize.sol:Initialize"]: string;
  ["src/libraries/fixed/actions/LendAsLimitOrder.sol:LendAsLimitOrder"]: string;
  ["src/libraries/fixed/actions/Deposit.sol:Deposit"]: string;
  ["src/libraries/fixed/actions/LiquidateFixedLoan.sol:LiquidateFixedLoan"]: string;
  ["src/libraries/fixed/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"]: string;
  ["src/libraries/fixed/actions/Compensate.sol:Compensate"]: string;
  ["src/libraries/fixed/actions/MoveToVariablePool.sol:MoveToVariablePool"]: string;
  ["src/libraries/fixed/actions/Repay.sol:Repay"]: string;
  ["src/libraries/fixed/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"]: string;
  ["src/libraries/fixed/actions/LendAsMarketOrder.sol:LendAsMarketOrder"]: string;
  ["src/libraries/general/actions/UpdateConfig.sol:UpdateConfig"]: string;
  ["src/libraries/fixed/actions/Claim.sol:Claim"]: string;
  ["src/libraries/fixed/actions/SelfLiquidateFixedLoan.sol:SelfLiquidateFixedLoan"]: string;
}
