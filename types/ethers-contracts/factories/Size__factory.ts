/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Size, SizeInterface } from "../Size";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "activeLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeVariableLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsMarketOrderParams",
        components: [
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "virtualCollateralLoanIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowerExit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowerExitParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowerToExitTo",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct ClaimParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateralRatio",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "compensate",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct CompensateParams",
        components: [
          {
            name: "loanToRepayId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "loanToCompensateId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "config",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Config",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "contract IPriceFeed",
          },
          {
            name: "variablePool",
            type: "address",
            internalType: "address",
          },
          {
            name: "insurance",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct DepositParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCredit",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDebt",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFOLAssignedCollateral",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFeeRecipient",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoan",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Loan",
        components: [
          {
            name: "faceValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "faceValueExited",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repaid",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "folId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanStatus",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum LoanStatus",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct Loan[]",
        components: [
          {
            name: "faceValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "faceValueExited",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repaid",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "folId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getProtocolVault",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserView",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct UserView",
        components: [
          {
            name: "user",
            type: "tuple",
            internalType: "struct User",
            components: [
              {
                name: "loanOffer",
                type: "tuple",
                internalType: "struct LoanOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "maxDueDate",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
              {
                name: "borrowOffer",
                type: "tuple",
                internalType: "struct BorrowOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "debtAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct InitializeParams",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrowAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrowToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "debtToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "protocolVault",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "extraParams",
        type: "tuple",
        internalType: "struct InitializeExtraParams",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isFOL",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lendAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxDueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lendAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsMarketOrderParams",
        components: [
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateLoanWithReplacement",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateLoanWithReplacementParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "liquidatorProfitBorrowAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "moveToVariablePool",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MoveToVariablePoolParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repay",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct RepayParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "selfLiquidateLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct SelfLiquidateLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "state",
    inputs: [],
    outputs: [
      {
        name: "tokens",
        type: "tuple",
        internalType: "struct Tokens",
        components: [
          {
            name: "collateralAsset",
            type: "address",
            internalType: "contract IERC20Metadata",
          },
          {
            name: "borrowAsset",
            type: "address",
            internalType: "contract IERC20Metadata",
          },
          {
            name: "collateralToken",
            type: "address",
            internalType: "contract CollateralToken",
          },
          {
            name: "borrowToken",
            type: "address",
            internalType: "contract BorrowToken",
          },
          {
            name: "debtToken",
            type: "address",
            internalType: "contract DebtToken",
          },
        ],
      },
      {
        name: "config",
        type: "tuple",
        internalType: "struct Config",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "contract IPriceFeed",
          },
          {
            name: "variablePool",
            type: "address",
            internalType: "address",
          },
          {
            name: "insurance",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateConfig",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct UpdateConfigParams",
        components: [
          {
            name: "priceFeed",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct WithdrawParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051613b3862000104600039600081816127490152818161277201526128b80152613b386000f3fe6080604052600436106102515760003560e01c8063872b7d2611610139578063c17c32f6116100b6578063d54a49141161007a578063d54a4914146107e8578063da304e4d14610808578063e30c397814610828578063eff69d951461083d578063f2fde38b14610852578063f45bf01c1461087257600080fd5b8063c17c32f61461069b578063c19d93fb146106bb578063c9dd1f3c14610788578063ca40742c146107a8578063d49dd24f146107c857600080fd5b8063aa4a8711116100fd578063aa4a8711146105ce578063ac88180f146105f0578063ac9650d814610610578063ad3cb1cc1461063d578063aff25c0c1461067b57600080fd5b8063872b7d261461052c5780638da5cb5b1461054c5780638e572776146105795780639cd4aaa8146105995780639e7d09b7146105b957600080fd5b80634f1ef286116101d25780635cbc51eb116101965780635cbc51eb1461047357806363b08c1a146104a0578063715018a6146104c057806379502c55146104d557806379ba5097146104f75780637f2c2aba1461050c57600080fd5b80634f1ef286146103de578063504006ca146103f157806352d1902d1461041e5780635c0f0318146104335780635c7a2a801461045357600080fd5b806324c381831161021957806324c381831461032f57806332e7fdef1461034f5780633c5654171461036f578063416b40c71461038f5780634ccb20c0146103ae57600080fd5b8063042e02cf1461025657806308631e401461028b57806318719d5f146102c05780631c4fd41c146102e2578063211a44431461030f575b600080fd5b34801561026257600080fd5b50610276610271366004612d11565b610892565b60405190151581526020015b60405180910390f35b34801561029757600080fd5b506102ab6102a6366004612d44565b61091e565b60408051928352602083019190915201610282565b3480156102cc57600080fd5b506102e06102db366004612d72565b610a99565b005b3480156102ee57600080fd5b506103026102fd366004612d8e565b610bfd565b6040516102829190612da7565b34801561031b57600080fd5b5061027661032a366004612d8e565b610ca7565b34801561033b57600080fd5b506102e061034a366004612dcf565b610db7565b34801561035b57600080fd5b5061027661036a366004612d8e565b610fc6565b34801561037b57600080fd5b506102e061038a366004612d72565b61105f565b34801561039b57600080fd5b506001545b604051908152602001610282565b3480156103ba57600080fd5b506103c3611171565b60408051938452602084019290925290820152606001610282565b6102e06103ec366004612e86565b6112d4565b3480156103fd57600080fd5b5061041161040c366004612d8e565b6112f3565b6040516102829190612f80565b34801561042a57600080fd5b506103a06113d4565b34801561043f57600080fd5b506102e061044e366004612f8e565b6113f1565b34801561045f57600080fd5b506102e061046e366004612d72565b611495565b34801561047f57600080fd5b5061049361048e366004612d11565b611539565b6040516102829190613034565b3480156104ac57600080fd5b506102e06104bb3660046130f8565b61188a565b3480156104cc57600080fd5b506102e0611933565b3480156104e157600080fd5b506104ea611947565b604051610282919061318f565b34801561050357600080fd5b506102e0611a21565b34801561051857600080fd5b506102e061052736600461319e565b611a6e565b34801561053857600080fd5b506102e06105473660046131be565b611b1a565b34801561055857600080fd5b50610561611bbe565b6040516001600160a01b039091168152602001610282565b34801561058557600080fd5b506102e0610594366004612d44565b611bf3565b3480156105a557600080fd5b506103a06105b4366004612d8e565b611cc4565b3480156105c557600080fd5b506103c3611dc4565b3480156105da57600080fd5b506105e3611edf565b60405161028291906132c9565b3480156105fc57600080fd5b506102e061060b3660046130f8565b611f94565b34801561061c57600080fd5b5061063061062b366004613317565b61203d565b60405161028291906133dc565b34801561064957600080fd5b5061066e604051806040016040528060058152602001640352e302e360dc1b81525081565b604051610282919061343e565b34801561068757600080fd5b506102e0610696366004612d72565b612132565b3480156106a757600080fd5b506103a06106b6366004612d72565b6121d4565b3480156106c757600080fd5b506040805160a080820183526003546001600160a01b039081168352600454811660208085019190915260055482168486015260065482166060808601919091526007548316608080870191909152865161012081018852600854815260095493810193909352600a5496830196909652600b5490820152600c5494810194909452600d54811691840191909152600e54811660c0840152600f54811660e08401526010541661010083015261077a9182565b604051610282929190613451565b34801561079457600080fd5b506103a06107a3366004612d8e565b6122bb565b3480156107b457600080fd5b506103a06107c3366004612d11565b61234d565b3480156107d457600080fd5b506102e06107e33660046134a3565b612397565b3480156107f457600080fd5b506102e06108033660046134d8565b61243b565b34801561081457600080fd5b506103a0610823366004612d8e565b61253b565b34801561083457600080fd5b506105616125ce565b34801561084957600080fd5b506002546103a0565b34801561085e57600080fd5b506102e061086d366004612d11565b6125f7565b34801561087e57600080fd5b506102e061088d3660046130f8565b61267c565b604051630ab0adeb60e31b81526000600482018190526001600160a01b03831660248301529073__$e3be7a02cc36c4fc59861378e374d62f33$__906355856f5890604401602060405180830381865af41580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091891906134ea565b92915050565b604051637574819b60e11b8152600090819073__$cff02a526fac95f46ea22f43b5b483056b$__9063eae903369061095c9084908790600401613507565b60006040518083038186803b15801561097457600080fd5b505af4158015610988573d6000803e3d6000fd5b505060405163085bf74b60e21b815273__$cff02a526fac95f46ea22f43b5b483056b$__925063216fdd2c91506109c6906000908790600401613507565b6040805180830381865af41580156109e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a069190613545565b909250905073__$e3be7a02cc36c4fc59861378e374d62f33$__6344a8b1476000610a376040870160208801612d11565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015610a7c57600080fd5b505af4158015610a90573d6000803e3d6000fd5b50505050915091565b60405163296e0ffd60e21b815273__$95d87730e373cebb4ca4c1a2f026cb5496$__9063a5b83ff490610ad3906000908590600401613569565b60006040518083038186803b158015610aeb57600080fd5b505af4158015610aff573d6000803e3d6000fd5b505060405163dde714c560e01b815273__$95d87730e373cebb4ca4c1a2f026cb5496$__925063dde714c59150610b3d906000908590600401613569565b60006040518083038186803b158015610b5557600080fd5b505af4158015610b69573d6000803e3d6000fd5b5073__$e3be7a02cc36c4fc59861378e374d62f33$__92506344a8b147915060009050610b9c6040850160208601612d11565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015b60006040518083038186803b158015610be257600080fd5b505af4158015610bf6573d6000803e3d6000fd5b5050505050565b60008073__$e3be7a02cc36c4fc59861378e374d62f33$__637919f151909160006001018581548110610c3257610c3261359d565b90600052602060002090600702016040518363ffffffff1660e01b8152600401610c66929190918252602082015260400190565b602060405180830381865af4158015610c83573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091891906135b3565b60008060006001018381548110610cc057610cc061359d565b600091825260208083206040805160e0810182526007949094029091018054845260018101549284019290925260028201546001600160a01b0390811684830152600383015416606084018190526004808401546080860152600584015460ff16151560a086015260069093015460c08501529051630ab0adeb60e31b8152918201939093526024810192909252915073__$e3be7a02cc36c4fc59861378e374d62f33$__906355856f5890604401602060405180830381865af4158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db091906134ea565b9392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610dfd5750825b905060008267ffffffffffffffff166001148015610e1a5750303b155b905081158015610e28575080155b15610e465760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610e7057845460ff60401b1916600160401b1785555b60405163a692d30d60e01b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063a692d30d90610eac906000908b908b906004016135d4565b60006040518083038186803b158015610ec457600080fd5b505af4158015610ed8573d6000803e3d6000fd5b50610ef39250610eee9150506020890189612d11565b612725565b610efb612736565b610f03612736565b610f0b612736565b604051630bbe48b760e41b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063bbe48b7090610f47906000908b908b906004016135d4565b60006040518083038186803b158015610f5f57600080fd5b505af4158015610f73573d6000803e3d6000fd5b505050508315610fbd57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b600061091860006001018381548110610fe157610fe161359d565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015260c001516000191490565b60405163010cc09b60e21b815273__$d7ed34c1233366b4d2093a06a83503a127$__90630433026c90611099906000908590600401613734565b60006040518083038186803b1580156110b157600080fd5b505af41580156110c5573d6000803e3d6000fd5b505060405163b8359e9760e01b815273__$d7ed34c1233366b4d2093a06a83503a127$__925063b8359e979150611103906000908590600401613734565b60006040518083038186803b15801561111b57600080fd5b505af415801561112f573d6000803e3d6000fd5b50506040516344a8b14760e01b81526000600482015233602482015273__$e3be7a02cc36c4fc59861378e374d62f33$__92506344a8b1479150604401610bca565b6005546010546040516370a0823160e01b81526001600160a01b039182166004820152600092839283929116906370a0823190602401602060405180830381865afa1580156111c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e89190613748565b6006546010546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112589190613748565b6007546010546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a08231906024015b602060405180830381865afa1580156112a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c99190613748565b925092509250909192565b6112dc61273e565b6112e5826127e3565b6112ef82826127eb565b5050565b6113476040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600015158152602001600081525090565b600180548390811061135b5761135b61359d565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015292915050565b60006113de6128ad565b50600080516020613ae383398151915290565b604051632cc4a87f60e11b815273__$0e7f22a922c80796059a4f902a991c4252$__9063598950fe9061142b90600090859060040161384d565b60006040518083038186803b15801561144357600080fd5b505af4158015611457573d6000803e3d6000fd5b505060405163020a460760e61b815273__$0e7f22a922c80796059a4f902a991c4252$__925063829181c09150610bca90600090859060040161384d565b604051638046123560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__906380461235906114cf906000908590600401613734565b60006040518083038186803b1580156114e757600080fd5b505af41580156114fb573d6000803e3d6000fd5b50506040516387e2411560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__92506387e241159150610bca906000908590600401613734565b611541612c2d565b604080516001600160a01b038416600090815260208181529083902061014083018452805460e084019081526001820154610100850152845160028301805460609581028301860188529682018781529596879660a088019687959487946101208b019491939092849284918401828280156115dc57602002820191906000526020600020905b8154815260200190600101908083116115c8575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561163457602002820191906000526020600020905b815481526020019060010190808311611620575b505050919092525050509052508152604080518082018252600484018054825282516005860180546020808202840160609081018852968401828152978101979596949590870194849284918401828280156116af57602002820191906000526020600020905b81548152602001906001019080831161169b575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561170757602002820191906000526020600020905b8154815260200190600101908083116116f3575b5050509190925250505090525090525081526001600160a01b0384811660208301819052600554604080516370a0823160e01b8152600481019390935290930192909116906370a0823190602401602060405180830381865afa158015611772573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117969190613748565b81526006546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa1580156117e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180c9190613748565b81526007546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa15801561185e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118829190613748565b905292915050565b6040516351b4085960e01b8152600060048201528135602482015273__$d8cad9693442357ae3bd536a88ac8b2fda$__906351b408599060440160006040518083038186803b1580156118dc57600080fd5b505af41580156118f0573d6000803e3d6000fd5b505060405163aa89ae9f60e01b8152600060048201528335602482015273__$d8cad9693442357ae3bd536a88ac8b2fda$__925063aa89ae9f9150604401610bca565b61193b6128f6565b6119456000612928565b565b6119ba604051806101200160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b50604080516101208101825260085481526009546020820152600a5491810191909152600b546060820152600c546080820152600d546001600160a01b0390811660a0830152600e54811660c0830152600f54811660e08301526010541661010082015290565b3380611a2b6125ce565b6001600160a01b031614611a625760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b611a6b81612928565b50565b611a766128f6565b60405163e57980dd60e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063e57980dd90611ab090600090859060040161388b565b60006040518083038186803b158015611ac857600080fd5b505af4158015611adc573d6000803e3d6000fd5b5050604051634752b3b360e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9250634752b3b39150610bca90600090859060040161388b565b604051634721523f60e11b815273__$8d793199f9136f957f886f33c2c7f39b75$__90638e42a47e90611b549060009085906004016138f8565b60006040518083038186803b158015611b6c57600080fd5b505af4158015611b80573d6000803e3d6000fd5b5050604051633ebc18a560e01b815273__$8d793199f9136f957f886f33c2c7f39b75$__9250633ebc18a591506111039060009085906004016138f8565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b60408051634bc1120160e01b815260006004820152823560248201526020830135604482015290820135606482015273__$ef4190de80c3c7f10088bb7cf8a0baddca$__90634bc112019060840160006040518083038186803b158015611c5957600080fd5b505af4158015611c6d573d6000803e3d6000fd5b5050604080516332f4053b60e01b815260006004820152843560248201526020850135604482015290840135606482015273__$ef4190de80c3c7f10088bb7cf8a0baddca$__92506332f4053b9150608401610bca565b60008060006001018381548110611cdd57611cdd61359d565b600091825260208083206040805160e08101825260079094029091018054845260018101549284019290925260028201546001600160a01b039081168483015260038301541660608401526004808301546080850152600583015460ff16151560a085015260069092015460c08401525163f711fb6960e01b815291935073__$e3be7a02cc36c4fc59861378e374d62f33$__9263f711fb6992611d8392869101613986565b602060405180830381865af4158015611da0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db09190613748565b600554600e546040516370a0823160e01b81526001600160a01b039182166004820152600092839283929116906370a0823190602401602060405180830381865afa158015611e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3b9190613748565b600654600e546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015611e87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eab9190613748565b600754600e546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401611288565b60606000600101805480602002602001604051908101604052809291908181526020016000905b82821015611f8b5760008481526020908190206040805160e08101825260078602909201805483526001808201548486015260028201546001600160a01b03908116938501939093526003820154909216606084015260048101546080840152600581015460ff16151560a08401526006015460c08301529083529092019101611f06565b50505050905090565b60405163a2c595c760e01b8152600060048201528135602482015273__$a7e4e07d6d9ebec01c8ddb11fc157c165f$__9063a2c595c79060440160006040518083038186803b158015611fe657600080fd5b505af4158015611ffa573d6000803e3d6000fd5b5050604051630c29914560e41b8152600060048201528335602482015273__$a7e4e07d6d9ebec01c8ddb11fc157c165f$__925063c29914509150604401610bca565b60608167ffffffffffffffff81111561205857612058612e16565b60405190808252806020026020018201604052801561208b57816020015b60608152602001906001900390816120765790505b50905060005b8281101561212b576120fb308585848181106120af576120af61359d565b90506020028101906120c1919061399b565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061296092505050565b82828151811061210d5761210d61359d565b60200260200101819052508080612123906139f8565b915050612091565b5092915050565b6040516210aa0b60e31b815273__$7dc37f9f4797eb854780a74171eb2f4993$__90628550589061216a906000908590600401613a11565b60006040518083038186803b15801561218257600080fd5b505af4158015612196573d6000803e3d6000fd5b50506040516364140a8360e01b815273__$7dc37f9f4797eb854780a74171eb2f4993$__92506364140a839150610bca906000908590600401613a11565b604051633eaefba560e11b815260009073__$31eeffd6d129c97860b62769217ca29194$__90637d5df74a906122109084908690600401613a11565b60006040518083038186803b15801561222857600080fd5b505af415801561223c573d6000803e3d6000fd5b505060405163e3e32d5160e01b815273__$31eeffd6d129c97860b62769217ca29194$__925063e3e32d51915061227a906000908690600401613a11565b602060405180830381865af4158015612297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109189190613748565b6000610918600060010183815481106122d6576122d661359d565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c08201525190565b60405163046dbd1360e11b81526000600482018190526001600160a01b03831660248301529073__$e3be7a02cc36c4fc59861378e374d62f33$__906308db7a269060440161227a565b60405163c00a512760e01b815273__$3ea2d971f4db75ed849199519b7bbdd8b6$__9063c00a5127906123d1906000908590600401613a2f565b60006040518083038186803b1580156123e957600080fd5b505af41580156123fd573d6000803e3d6000fd5b505060405163af54844160e01b815273__$3ea2d971f4db75ed849199519b7bbdd8b6$__925063af5484419150610bca906000908590600401613a2f565b6040516355e37cf560e11b815273__$07e86bcef4998d4b87078f4c72fdc88121$__9063abc6f9ea90612475906000908590600401613a63565b60006040518083038186803b15801561248d57600080fd5b505af41580156124a1573d6000803e3d6000fd5b5050604051635fc2d93160e01b815273__$07e86bcef4998d4b87078f4c72fdc88121$__9250635fc2d93191506124df906000908590600401613a63565b60006040518083038186803b1580156124f757600080fd5b505af415801561250b573d6000803e3d6000fd5b5073__$e3be7a02cc36c4fc59861378e374d62f33$__92506344a8b147915060009050610b9c6020850185612d11565b6000610918600060010183815481106125565761255661359d565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c08201526129d6565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00611be3565b6125ff6128f6565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255612643611bbe565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b604051635792057f60e11b8152600060048201528135602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__9063af240afe9060440160006040518083038186803b1580156126ce57600080fd5b505af41580156126e2573d6000803e3d6000fd5b50506040516320e9b9f960e11b8152600060048201528335602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$";

type SizeConstructorParams =
  | [linkLibraryAddresses: SizeLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SizeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Size__factory extends ContractFactory {
  constructor(...args: SizeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Size__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: SizeLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e3be7a02cc36c4fc59861378e374d62f33\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Common.sol:Common"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cff02a526fac95f46ea22f43b5b483056b\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LiquidateLoanWithReplacement.sol:LiquidateLoanWithReplacement"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$95d87730e373cebb4ca4c1a2f026cb5496\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/BorrowerExit.sol:BorrowerExit"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$34e5abf8aed44cb09d2bd12ec9cc797973\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Initialize.sol:Initialize"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d7ed34c1233366b4d2093a06a83503a127\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Withdraw.sol:Withdraw"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0e7f22a922c80796059a4f902a991c4252\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LendAsLimitOrder.sol:LendAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$102e258b2685b09f31e1bdc044a973265c\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Deposit.sol:Deposit"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d8cad9693442357ae3bd536a88ac8b2fda\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/SelfLiquidateLoan.sol:SelfLiquidateLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$32fe41b939f9fd8fb0430b5111f401f35c\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/UpdateConfig.sol:UpdateConfig"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8d793199f9136f957f886f33c2c7f39b75\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ef4190de80c3c7f10088bb7cf8a0baddca\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Compensate.sol:Compensate"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a7e4e07d6d9ebec01c8ddb11fc157c165f\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/MoveToVariablePool.sol:MoveToVariablePool"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7dc37f9f4797eb854780a74171eb2f4993\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Repay.sol:Repay"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$31eeffd6d129c97860b62769217ca29194\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LiquidateLoan.sol:LiquidateLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3ea2d971f4db75ed849199519b7bbdd8b6\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$07e86bcef4998d4b87078f4c72fdc88121\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LendAsMarketOrder.sol:LendAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$65756fc1cb7d5518f865a4f2165258b0ec\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Claim.sol:Claim"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Size> {
    return super.deploy(overrides || {}) as Promise<Size>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Size {
    return super.attach(address) as Size;
  }
  override connect(signer: Signer): Size__factory {
    return super.connect(signer) as Size__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SizeInterface {
    return new utils.Interface(_abi) as SizeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Size {
    return new Contract(address, _abi, signerOrProvider) as Size;
  }
}

export interface SizeLibraryAddresses {
  ["src/libraries/actions/Common.sol:Common"]: string;
  ["src/libraries/actions/LiquidateLoanWithReplacement.sol:LiquidateLoanWithReplacement"]: string;
  ["src/libraries/actions/BorrowerExit.sol:BorrowerExit"]: string;
  ["src/libraries/actions/Initialize.sol:Initialize"]: string;
  ["src/libraries/actions/Withdraw.sol:Withdraw"]: string;
  ["src/libraries/actions/LendAsLimitOrder.sol:LendAsLimitOrder"]: string;
  ["src/libraries/actions/Deposit.sol:Deposit"]: string;
  ["src/libraries/actions/SelfLiquidateLoan.sol:SelfLiquidateLoan"]: string;
  ["src/libraries/actions/UpdateConfig.sol:UpdateConfig"]: string;
  ["src/libraries/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"]: string;
  ["src/libraries/actions/Compensate.sol:Compensate"]: string;
  ["src/libraries/actions/MoveToVariablePool.sol:MoveToVariablePool"]: string;
  ["src/libraries/actions/Repay.sol:Repay"]: string;
  ["src/libraries/actions/LiquidateLoan.sol:LiquidateLoan"]: string;
  ["src/libraries/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"]: string;
  ["src/libraries/actions/LendAsMarketOrder.sol:LendAsMarketOrder"]: string;
  ["src/libraries/actions/Claim.sol:Claim"]: string;
}
