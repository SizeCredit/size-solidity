/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Size, SizeInterface } from "../Size";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "activeFixedLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsMarketOrderParams",
        components: [
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "virtualCollateralFixedLoanIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowerExit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowerExitParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowerToExitTo",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct ClaimParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateralRatio",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "compensate",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct CompensateParams",
        components: [
          {
            name: "loanToRepayId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "loanToCompensateId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "config",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct InitializeFixedParams",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct DepositParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCredit",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDebt",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFOLAssignedCollateral",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFeeRecipient",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFixedLoan",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct FixedLoan",
        components: [
          {
            name: "faceValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "faceValueExited",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repaid",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "folId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFixedLoanStatus",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum FixedLoanStatus",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFixedLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct FixedLoan[]",
        components: [
          {
            name: "faceValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "faceValueExited",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repaid",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "folId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserView",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct UserView",
        components: [
          {
            name: "user",
            type: "tuple",
            internalType: "struct User",
            components: [
              {
                name: "loanOffer",
                type: "tuple",
                internalType: "struct FixedLoanOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "maxDueDate",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
              {
                name: "borrowOffer",
                type: "tuple",
                internalType: "struct BorrowOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
              {
                name: "proxy",
                type: "address",
                internalType: "contract UserProxy",
              },
              {
                name: "vpBorrowAssetScaledDeposits",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "debtAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "vpBorrowAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVariablePool",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "g",
        type: "tuple",
        internalType: "struct InitializeGeneralParams",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrowAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "variablePool",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "f",
        type: "tuple",
        internalType: "struct InitializeFixedParams",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isFOL",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lendAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxDueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lendAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsMarketOrderParams",
        components: [
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateFixedLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateFixedLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateFixedLoanWithReplacement",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateFixedLoanWithReplacementParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "liquidatorProfitBorrowAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "moveToVariablePool",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MoveToVariablePoolParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repay",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct RepayParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "selfLiquidateFixedLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct SelfLiquidateFixedLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "tokens",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract CollateralToken",
      },
      {
        name: "",
        type: "address",
        internalType: "contract BorrowToken",
      },
      {
        name: "",
        type: "address",
        internalType: "contract DebtToken",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateConfig",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct UpdateConfigParams",
        components: [
          {
            name: "key",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct WithdrawParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "to",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051613b9f62000104600039600081816127cd015281816127f6015261293c0152613b9f6000f3fe6080604052600436106102465760003560e01c80638da5cb5b11610139578063c98e7172116100b6578063da304e4d1161007a578063da304e4d14610769578063e30c397814610789578063f17cc7bf1461079e578063f2fde38b146107be578063f45bf01c146107de578063fee20b78146107fe57600080fd5b8063c98e7172146106bc578063c9dd1f3c146106e9578063ca40742c14610709578063d49dd24f14610729578063d54a49141461074957600080fd5b80639e48cc2b116100fd5780639e48cc2b146105fc578063ac88180f14610611578063ac9650d814610631578063ad3cb1cc1461065e578063aff25c0c1461069c57600080fd5b80638da5cb5b1461052d5780638e5727761461055a5780639a93a40f1461057a5780639cd4aaa81461059c5780639d63848a146105bc57600080fd5b806352d1902d116101c7578063715018a61161018b578063715018a61461046c57806373b5bf0e1461048157806379502c55146104a157806379ba5097146104f8578063872b7d261461050d57600080fd5b806352d1902d146103af57806353b663c9146103d25780635c0f0318146103f25780635cbc51eb14610412578063670b7e111461043f57600080fd5b8063211a44431161020e578063211a4443146103275780632b4c9a201461034757806332e7fdef146103675780634ccb20c0146103875780634f1ef2861461039c57600080fd5b8063042e02cf1461024b5780630cecbe17146102805780630cf8542f146102b557806318719d5f146102d75780631dba19c3146102f7575b600080fd5b34801561025757600080fd5b5061026b610266366004612dc9565b61081e565b60405190151581526020015b60405180910390f35b34801561028c57600080fd5b506102a061029b366004612dfc565b6108aa565b60408051928352602083019190915201610277565b3480156102c157600080fd5b506102d56102d0366004612dfc565b610a25565b005b3480156102e357600080fd5b506102d56102f2366004612e2a565b610afc565b34801561030357600080fd5b5061030c610c31565b60408051938452602084019290925290820152606001610277565b34801561033357600080fd5b5061026b610342366004612e46565b610dee565b34801561035357600080fd5b506102d5610362366004612dfc565b610efe565b34801561037357600080fd5b5061026b610382366004612e46565b611010565b34801561039357600080fd5b5061030c6110a9565b6102d56103aa366004612ecf565b61120b565b3480156103bb57600080fd5b506103c461122a565b604051908152602001610277565b3480156103de57600080fd5b506102d56103ed366004612f75565b611247565b3480156103fe57600080fd5b506102d561040d366004612fbb565b611456565b34801561041e57600080fd5b5061043261042d366004612dc9565b6114fa565b6040516102779190613061565b34801561044b57600080fd5b5061045f61045a366004612e46565b6118f2565b6040516102779190613146565b34801561047857600080fd5b506102d561199c565b34801561048d57600080fd5b506103c461049c366004612e2a565b6119b0565b3480156104ad57600080fd5b506104b6611a97565b6040516102779190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b34801561050457600080fd5b506102d5611afe565b34801561051957600080fd5b506102d561052836600461317c565b611b4b565b34801561053957600080fd5b50610542611bef565b6040516001600160a01b039091168152602001610277565b34801561056657600080fd5b506102d5610575366004612dfc565b611c24565b34801561058657600080fd5b5061058f611cf5565b60405161027791906132db565b3480156105a857600080fd5b506103c46105b7366004612e46565b611da7565b3480156105c857600080fd5b50600d54600e54600f54604080516001600160a01b0394851681529284166020840152921691810191909152606001610277565b34801561060857600080fd5b506007546103c4565b34801561061d57600080fd5b506102d561062c36600461333b565b611ea7565b34801561063d57600080fd5b5061065161064c366004613357565b611f50565b604051610277919061341c565b34801561066a57600080fd5b5061068f604051806040016040528060058152602001640352e302e360dc1b81525081565b604051610277919061347e565b3480156106a857600080fd5b506102d56106b7366004612e2a565b612045565b3480156106c857600080fd5b506106dc6106d7366004612e46565b6120e7565b6040516102779190613491565b3480156106f557600080fd5b506103c4610704366004612e46565b6121c8565b34801561071557600080fd5b506103c4610724366004612dc9565b61225a565b34801561073557600080fd5b506102d561074436600461349f565b6122a4565b34801561075557600080fd5b506102d56107643660046134d4565b612348565b34801561077557600080fd5b506103c4610784366004612e46565b612448565b34801561079557600080fd5b506105426124db565b3480156107aa57600080fd5b506102d56107b9366004612e2a565b612504565b3480156107ca57600080fd5b506102d56107d9366004612dc9565b6125c9565b3480156107ea57600080fd5b506102d56107f936600461333b565b61264e565b34801561080a57600080fd5b506102d561081936600461333b565b6126f7565b604051630ab0adeb60e31b81526000600482018190526001600160a01b03831660248301529073__$607b1b20eb5a2cd79d73785fca5219dd63$__906355856f5890604401602060405180830381865af4158015610880573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a491906134e6565b92915050565b60405163683d782960e11b8152600090819073__$cb18c7b0f32039a8feafdac4367b2ca82e$__9063d07af052906108e89084908790600401613503565b60006040518083038186803b15801561090057600080fd5b505af4158015610914573d6000803e3d6000fd5b5050604051630953870960e11b815273__$cb18c7b0f32039a8feafdac4367b2ca82e$__92506312a70e129150610952906000908790600401613503565b6040805180830381865af415801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190613541565b909250905073__$607b1b20eb5a2cd79d73785fca5219dd63$__6344a8b14760006109c36040870160208801612dc9565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015610a0857600080fd5b505af4158015610a1c573d6000803e3d6000fd5b50505050915091565b604051638046123560e01b815273__$4403135f0e9807eb6ca4982c66f6f482e5$__90638046123590610a5f90600090859060040161359c565b60006040518083038186803b158015610a7757600080fd5b505af4158015610a8b573d6000803e3d6000fd5b50506040516387e2411560e01b815273__$4403135f0e9807eb6ca4982c66f6f482e5$__92506387e241159150610ac990600090859060040161359c565b60006040518083038186803b158015610ae157600080fd5b505af4158015610af5573d6000803e3d6000fd5b5050505050565b60405163296e0ffd60e21b815273__$51397d58d1fe776c4f3cf7d2e3707b23e6$__9063a5b83ff490610b369060009085906004016135b0565b60006040518083038186803b158015610b4e57600080fd5b505af4158015610b62573d6000803e3d6000fd5b505060405163dde714c560e01b815273__$51397d58d1fe776c4f3cf7d2e3707b23e6$__925063dde714c59150610ba09060009085906004016135b0565b60006040518083038186803b158015610bb857600080fd5b505af4158015610bcc573d6000803e3d6000fd5b5073__$607b1b20eb5a2cd79d73785fca5219dd63$__92506344a8b147915060009050610bff6040850160208601612dc9565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401610ac9565b6001546003546040516370a0823160e01b81526001600160a01b03918216600482015260009283928392610d219291909116906370a0823190602401602060405180830381865afa158015610c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cae91906135e4565b6001546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015610cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1c91906135fd565b6127a0565b6002546003546040516370a0823160e01b81526001600160a01b039182166004820152610de19291909116906370a0823190602401602060405180830381865afa158015610d73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9791906135e4565b6002546040805163313ce56760e01b815290516001600160a01b039092169163313ce567916004808201926020929091908290030181865afa158015610cf8573d6000803e3d6000fd5b6000925092509250909192565b60078054600091829184908110610e0757610e07613620565b600091825260208083206040805160e0810182526007949094029091018054845260018101549284019290925260028201546001600160a01b0390811684830152600383015416606084018190526004808401546080860152600584015460ff16151560a086015260069093015460c08501529051630ab0adeb60e31b8152918201939093526024810192909252915073__$607b1b20eb5a2cd79d73785fca5219dd63$__906355856f5890604401602060405180830381865af4158015610ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef791906134e6565b9392505050565b60405163010cc09b60e21b815273__$49f84da662e4e8fb3f209f074f056c6127$__90630433026c90610f3890600090859060040161359c565b60006040518083038186803b158015610f5057600080fd5b505af4158015610f64573d6000803e3d6000fd5b505060405163b8359e9760e01b815273__$49f84da662e4e8fb3f209f074f056c6127$__925063b8359e979150610fa290600090859060040161359c565b60006040518083038186803b158015610fba57600080fd5b505af4158015610fce573d6000803e3d6000fd5b50506040516344a8b14760e01b81526000600482015233602482015273__$607b1b20eb5a2cd79d73785fca5219dd63$__92506344a8b1479150604401610ac9565b600780546000916108a4918490811061102b5761102b613620565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015260c001516000191490565b600d546005546040516370a0823160e01b81526001600160a01b039182166004820152600092839283929116906370a0823190602401602060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112091906135e4565b600e546005546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa15801561116c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119091906135e4565b600f546005546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa1580156111dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120091906135e4565b925092509250909192565b6112136127c2565b61121c82612867565b611226828261286f565b5050565b6000611234612931565b50600080516020613b4a83398151915290565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff1660008115801561128d5750825b905060008267ffffffffffffffff1660011480156112aa5750303b155b9050811580156112b8575080155b156112d65760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561130057845460ff60401b1916600160401b1785555b604051630adfa5d160e11b815273__$b462f6a219454e88f475ac21fe8ee88314$__906315bf4ba29061133c906000908b908b90600401613636565b60006040518083038186803b15801561135457600080fd5b505af4158015611368573d6000803e3d6000fd5b50611383925061137e9150506020890189612dc9565b61297a565b61138b61298b565b61139361298b565b61139b61298b565b604051631a52fb7560e21b815273__$b462f6a219454e88f475ac21fe8ee88314$__9063694bedd4906113d7906000908b908b90600401613636565b60006040518083038186803b1580156113ef57600080fd5b505af4158015611403573d6000803e3d6000fd5b50505050831561144d57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b604051632cc4a87f60e11b815273__$962131464050f1c8bda76ba1e51b2ec399$__9063598950fe906114909060009085906004016137dd565b60006040518083038186803b1580156114a857600080fd5b505af41580156114bc573d6000803e3d6000fd5b505060405163020a460760e61b815273__$962131464050f1c8bda76ba1e51b2ec399$__925063829181c09150610ac99060009085906004016137dd565b611502612cca565b604080516001600160a01b038416600090815260066020908152908390206101a083018452805461014084019081526001820154610160850152845160028301805460609581028301860188529682018781529596879660c088019687959487946101808b019491939092849284918401828280156115a057602002820191906000526020600020905b81548152602001906001019080831161158c575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156115f857602002820191906000526020600020905b8154815260200190600101908083116115e4575b5050509190925250505090525081526040805180820182526004840180548252825160058601805460208082028401606090810188529684018281529781019795969495908701948492849184018282801561167357602002820191906000526020600020905b81548152602001906001019080831161165f575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156116cb57602002820191906000526020600020905b8154815260200190600101908083116116b7575b50505091909252505050905250815260078201546001600160a01b03908116602080840191909152600890930154604092830152928452868316918401829052600d5481516370a0823160e01b81526004810193909352930192909116906370a0823190602401602060405180830381865afa15801561174f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061177391906135e4565b8152600e546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa1580156117c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e991906135e4565b8152600f546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa15801561183b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185f91906135e4565b8152604051630453cbd360e01b8152600060048201526001600160a01b038516602482015260209091019073__$e16902e34944ab56a365508fa3a77d8646$__90630453cbd390604401602060405180830381865af41580156118c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ea91906135e4565b905292915050565b6007805460009173__$607b1b20eb5a2cd79d73785fca5219dd63$__91636a625fd39184918690811061192757611927613620565b90600052602060002090600702016040518363ffffffff1660e01b815260040161195b929190918252602082015260400190565b602060405180830381865af4158015611978573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a4919061381b565b6119a4612993565b6119ae60006129c5565b565b6040516303bfc23f60e61b815260009073__$e71249760c0dcf181f72292e4cd7644226$__9063eff08fc0906119ec908490869060040161383c565b60006040518083038186803b158015611a0457600080fd5b505af4158015611a18573d6000803e3d6000fd5b5050604051631263f37d60e21b815273__$e71249760c0dcf181f72292e4cd7644226$__925063498fcdf49150611a5690600090869060040161383c565b602060405180830381865af4158015611a73573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a491906135e4565b611ac96040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b506040805160a08101825260085481526009546020820152600b5491810191909152600c546060820152600a54608082015290565b3380611b086124db565b6001600160a01b031614611b3f5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b611b48816129c5565b50565b604051634721523f60e11b815273__$dee541f472de99496c9c736fb7527b5e40$__90638e42a47e90611b8590600090859060040161385a565b60006040518083038186803b158015611b9d57600080fd5b505af4158015611bb1573d6000803e3d6000fd5b5050604051633ebc18a560e01b815273__$dee541f472de99496c9c736fb7527b5e40$__9250633ebc18a59150610fa290600090859060040161385a565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b60408051634bc1120160e01b815260006004820152823560248201526020830135604482015290820135606482015273__$3a1d997c5c9678ee6cf109a0d2c3c18352$__90634bc112019060840160006040518083038186803b158015611c8a57600080fd5b505af4158015611c9e573d6000803e3d6000fd5b5050604080516332f4053b60e01b815260006004820152843560248201526020850135604482015290840135606482015273__$3a1d997c5c9678ee6cf109a0d2c3c18352$__92506332f4053b9150608401610ac9565b60078054604080516020808402820181019092528281526060939092909160009084015b82821015611d9e5760008481526020908190206040805160e08101825260078602909201805483526001808201548486015260028201546001600160a01b03908116938501939093526003820154909216606084015260048101546080840152600581015460ff16151560a08401526006015460c08301529083529092019101611d19565b50505050905090565b60078054600091829184908110611dc057611dc0613620565b600091825260208083206040805160e08101825260079094029091018054845260018101549284019290925260028201546001600160a01b039081168483015260038301541660608401526004808301546080850152600583015460ff16151560a085015260069092015460c084015251633d87bcf760e21b815291935073__$607b1b20eb5a2cd79d73785fca5219dd63$__9263f61ef3dc92611e66928691016138e8565b602060405180830381865af4158015611e83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef791906135e4565b60405163a2c595c760e01b8152600060048201528135602482015273__$80dbf2b715aebc46a4e9fff973a01f7540$__9063a2c595c79060440160006040518083038186803b158015611ef957600080fd5b505af4158015611f0d573d6000803e3d6000fd5b5050604051630c29914560e41b8152600060048201528335602482015273__$80dbf2b715aebc46a4e9fff973a01f7540$__925063c29914509150604401610ac9565b60608167ffffffffffffffff811115611f6b57611f6b612e5f565b604051908082528060200260200182016040528015611f9e57816020015b6060815260200190600190039081611f895790505b50905060005b8281101561203e5761200e30858584818110611fc257611fc2613620565b9050602002810190611fd491906138fd565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506129fd92505050565b82828151811061202057612020613620565b602002602001018190525080806120369061395a565b915050611fa4565b5092915050565b6040516210aa0b60e31b815273__$ca83da0f2db4b314a800dde3087d78803f$__90628550589061207d90600090859060040161383c565b60006040518083038186803b15801561209557600080fd5b505af41580156120a9573d6000803e3d6000fd5b50506040516364140a8360e01b815273__$ca83da0f2db4b314a800dde3087d78803f$__92506364140a839150610ac990600090859060040161383c565b61213b6040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600015158152602001600081525090565b600780548390811061214f5761214f613620565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015292915050565b600780546000916108a491849081106121e3576121e3613620565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c08201525190565b60405163046dbd1360e11b81526000600482018190526001600160a01b03831660248301529073__$607b1b20eb5a2cd79d73785fca5219dd63$__906308db7a2690604401611a56565b60405163c00a512760e01b815273__$ff994ace3d8552359fc562dad647a82380$__9063c00a5127906122de906000908590600401613973565b60006040518083038186803b1580156122f657600080fd5b505af415801561230a573d6000803e3d6000fd5b505060405163af54844160e01b815273__$ff994ace3d8552359fc562dad647a82380$__925063af5484419150610ac9906000908590600401613973565b6040516355e37cf560e11b815273__$efc015e84c43e324693365c393cf32e8b7$__9063abc6f9ea906123829060009085906004016139a7565b60006040518083038186803b15801561239a57600080fd5b505af41580156123ae573d6000803e3d6000fd5b5050604051635fc2d93160e01b815273__$efc015e84c43e324693365c393cf32e8b7$__9250635fc2d93191506123ec9060009085906004016139a7565b60006040518083038186803b15801561240457600080fd5b505af4158015612418573d6000803e3d6000fd5b5073__$607b1b20eb5a2cd79d73785fca5219dd63$__92506344a8b147915060009050610bff6020850185612dc9565b600780546000916108a4918490811061246357612463613620565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c0820152612a73565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00611c14565b61250c612993565b60405163e57980dd60e01b815260006004820152813560248201526020820135604482015273__$90998bf69d4187ab28a2073b6c8ec80443$__9063e57980dd9060640160006040518083038186803b15801561256857600080fd5b505af415801561257c573d6000803e3d6000fd5b5050604051634752b3b360e01b815260006004820152833560248201526020840135604482015273__$90998bf69d4187ab28a2073b6c8ec80443$__9250634752b3b39150606401610ac9565b6125d1612993565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255612615611bef565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b604051635792057f60e11b8152600060048201528135602482015273__$9edec1664f5c31c8f0ae1622332fe489b7$__9063af240afe9060440160006040518083038186803b1580156126a057600080fd5b505af41580156126b4573d6000803e3d6000fd5b50506040516320e9b9f960e11b8152600060048201528335602482015273__$9edec1664f5c31c8f0ae1622332fe489b7$__92506341d373f29150604401610ac9565b6040516364f11c5d60e11b8152600060048201528135602482015273__$ad52494b1fdb65a51fe72d163c9d4293f6$__9063c9e238ba9060440160006040518083038186803b15801561274957600080fd5b505af415801561275d573d6000803e3d6000fd5b505060405163230c5e2d60e11b8152600060048201528335602482015273__$ad52494b1fdb65a51fe72d163c9d4293f6$";

type SizeConstructorParams =
  | [linkLibraryAddresses: SizeLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SizeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Size__factory extends ContractFactory {
  constructor(...args: SizeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Size__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: SizeLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$607b1b20eb5a2cd79d73785fca5219dd63\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/FixedLibrary.sol:FixedLibrary"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cb18c7b0f32039a8feafdac4367b2ca82e\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/LiquidateFixedLoanWithReplacement.sol:LiquidateFixedLoanWithReplacement"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$4403135f0e9807eb6ca4982c66f6f482e5\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/actions/Deposit.sol:Deposit"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$51397d58d1fe776c4f3cf7d2e3707b23e6\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/BorrowerExit.sol:BorrowerExit"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$49f84da662e4e8fb3f209f074f056c6127\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/actions/Withdraw.sol:Withdraw"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b462f6a219454e88f475ac21fe8ee88314\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/general/actions/Initialize.sol:Initialize"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$962131464050f1c8bda76ba1e51b2ec399\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/LendAsLimitOrder.sol:LendAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e16902e34944ab56a365508fa3a77d8646\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/variable/VariableLibrary.sol:VariableLibrary"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e71249760c0dcf181f72292e4cd7644226\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/LiquidateFixedLoan.sol:LiquidateFixedLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$dee541f472de99496c9c736fb7527b5e40\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3a1d997c5c9678ee6cf109a0d2c3c18352\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/Compensate.sol:Compensate"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$80dbf2b715aebc46a4e9fff973a01f7540\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/MoveToVariablePool.sol:MoveToVariablePool"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ca83da0f2db4b314a800dde3087d78803f\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/actions/Repay.sol:Repay"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ff994ace3d8552359fc562dad647a82380\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$efc015e84c43e324693365c393cf32e8b7\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/LendAsMarketOrder.sol:LendAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$90998bf69d4187ab28a2073b6c8ec80443\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/general/actions/UpdateConfig.sol:UpdateConfig"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9edec1664f5c31c8f0ae1622332fe489b7\\$__", "g"),
      linkLibraryAddresses["src/libraries/fixed/actions/Claim.sol:Claim"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ad52494b1fdb65a51fe72d163c9d4293f6\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/fixed/actions/SelfLiquidateFixedLoan.sol:SelfLiquidateFixedLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Size> {
    return super.deploy(overrides || {}) as Promise<Size>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Size {
    return super.attach(address) as Size;
  }
  override connect(signer: Signer): Size__factory {
    return super.connect(signer) as Size__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SizeInterface {
    return new utils.Interface(_abi) as SizeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Size {
    return new Contract(address, _abi, signerOrProvider) as Size;
  }
}

export interface SizeLibraryAddresses {
  ["src/libraries/fixed/FixedLibrary.sol:FixedLibrary"]: string;
  ["src/libraries/fixed/actions/LiquidateFixedLoanWithReplacement.sol:LiquidateFixedLoanWithReplacement"]: string;
  ["src/libraries/fixed/actions/Deposit.sol:Deposit"]: string;
  ["src/libraries/fixed/actions/BorrowerExit.sol:BorrowerExit"]: string;
  ["src/libraries/fixed/actions/Withdraw.sol:Withdraw"]: string;
  ["src/libraries/general/actions/Initialize.sol:Initialize"]: string;
  ["src/libraries/fixed/actions/LendAsLimitOrder.sol:LendAsLimitOrder"]: string;
  ["src/libraries/variable/VariableLibrary.sol:VariableLibrary"]: string;
  ["src/libraries/fixed/actions/LiquidateFixedLoan.sol:LiquidateFixedLoan"]: string;
  ["src/libraries/fixed/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"]: string;
  ["src/libraries/fixed/actions/Compensate.sol:Compensate"]: string;
  ["src/libraries/fixed/actions/MoveToVariablePool.sol:MoveToVariablePool"]: string;
  ["src/libraries/fixed/actions/Repay.sol:Repay"]: string;
  ["src/libraries/fixed/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"]: string;
  ["src/libraries/fixed/actions/LendAsMarketOrder.sol:LendAsMarketOrder"]: string;
  ["src/libraries/general/actions/UpdateConfig.sol:UpdateConfig"]: string;
  ["src/libraries/fixed/actions/Claim.sol:Claim"]: string;
  ["src/libraries/fixed/actions/SelfLiquidateFixedLoan.sol:SelfLiquidateFixedLoan"]: string;
}
