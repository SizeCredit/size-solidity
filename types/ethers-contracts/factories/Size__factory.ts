/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Size, SizeInterface } from "../Size";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "activeLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeVariableLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsMarketOrderParams",
        components: [
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "virtualCollateralLoanIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowerExit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowerExitParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowerToExitTo",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct ClaimParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateralRatio",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "compensate",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct CompensateParams",
        components: [
          {
            name: "loanToRepayId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "loanToCompensateId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "config",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Config",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "contract IPriceFeed",
          },
          {
            name: "variablePool",
            type: "address",
            internalType: "address",
          },
          {
            name: "insurance",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct DepositParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCredit",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDebt",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFOLAssignedCollateral",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFeeRecipient",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoan",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Loan",
        components: [
          {
            name: "faceValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "faceValueExited",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repaid",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "folId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanStatus",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum LoanStatus",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct Loan[]",
        components: [
          {
            name: "faceValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "faceValueExited",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repaid",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "folId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserView",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct UserView",
        components: [
          {
            name: "user",
            type: "tuple",
            internalType: "struct User",
            components: [
              {
                name: "loanOffer",
                type: "tuple",
                internalType: "struct LoanOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "maxDueDate",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
              {
                name: "borrowOffer",
                type: "tuple",
                internalType: "struct BorrowOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "debtAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getVariablePool",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct InitializeParams",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrowAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrowToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "debtToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "variablePool",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "extraParams",
        type: "tuple",
        internalType: "struct InitializeExtraParams",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isFOL",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lendAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxDueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lendAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsMarketOrderParams",
        components: [
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateLoanWithReplacement",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateLoanWithReplacementParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "liquidatorProfitBorrowAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "moveToVariablePool",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MoveToVariablePoolParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repay",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct RepayParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "selfLiquidateLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct SelfLiquidateLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "state",
    inputs: [],
    outputs: [
      {
        name: "tokens",
        type: "tuple",
        internalType: "struct Tokens",
        components: [
          {
            name: "collateralAsset",
            type: "address",
            internalType: "contract IERC20Metadata",
          },
          {
            name: "borrowAsset",
            type: "address",
            internalType: "contract IERC20Metadata",
          },
          {
            name: "collateralToken",
            type: "address",
            internalType: "contract CollateralToken",
          },
          {
            name: "borrowToken",
            type: "address",
            internalType: "contract BorrowToken",
          },
          {
            name: "debtToken",
            type: "address",
            internalType: "contract DebtToken",
          },
        ],
      },
      {
        name: "config",
        type: "tuple",
        internalType: "struct Config",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "contract IPriceFeed",
          },
          {
            name: "variablePool",
            type: "address",
            internalType: "address",
          },
          {
            name: "insurance",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateConfig",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct UpdateConfigParams",
        components: [
          {
            name: "key",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "value",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct WithdrawParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051613ad262000104600039600081816127620152818161278b01526128d10152613ad26000f3fe6080604052600436106102515760003560e01c8063872b7d2611610139578063c19d93fb116100b6578063da304e4d1161007a578063da304e4d146107e8578063e30c397814610808578063eff69d951461081d578063f17cc7bf14610832578063f2fde38b14610852578063f45bf01c1461087257600080fd5b8063c19d93fb1461069b578063c9dd1f3c14610768578063ca40742c14610788578063d49dd24f146107a8578063d54a4914146107c857600080fd5b8063ac88180f116100fd578063ac88180f146105d0578063ac9650d8146105f0578063ad3cb1cc1461061d578063aff25c0c1461065b578063c17c32f61461067b57600080fd5b8063872b7d26146105215780638da5cb5b146105415780638e5727761461056e5780639cd4aaa81461058e578063aa4a8711146105ae57600080fd5b80634ccb20c0116101d25780635c7a2a80116101965780635c7a2a80146104685780635cbc51eb1461048857806363b08c1a146104b5578063715018a6146104d557806379502c55146104ea57806379ba50971461050c57600080fd5b80634ccb20c0146103de5780634f1ef286146103f3578063504006ca1461040657806352d1902d146104335780635c0f03181461044857600080fd5b8063211a444311610219578063211a44431461033f57806324c381831461035f57806332e7fdef1461037f5780633c5654171461039f578063416b40c7146103bf57600080fd5b8063042e02cf1461025657806308631e401461028b57806318719d5f146102c05780631c4fd41c146102e25780631dba19c31461030f575b600080fd5b34801561026257600080fd5b50610276610271366004612d2a565b610892565b60405190151581526020015b60405180910390f35b34801561029757600080fd5b506102ab6102a6366004612d5d565b61091e565b60408051928352602083019190915201610282565b3480156102cc57600080fd5b506102e06102db366004612d8b565b610a99565b005b3480156102ee57600080fd5b506103026102fd366004612da7565b610bfd565b6040516102829190612dc0565b34801561031b57600080fd5b50610324610ca7565b60408051938452602084019290925290820152606001610282565b34801561034b57600080fd5b5061027661035a366004612da7565b610e0a565b34801561036b57600080fd5b506102e061037a366004612de8565b610f1a565b34801561038b57600080fd5b5061027661039a366004612da7565b611129565b3480156103ab57600080fd5b506102e06103ba366004612d8b565b6111c2565b3480156103cb57600080fd5b506001545b604051908152602001610282565b3480156103ea57600080fd5b506103246112d4565b6102e0610401366004612e9f565b6113ef565b34801561041257600080fd5b50610426610421366004612da7565b61140e565b6040516102829190612f99565b34801561043f57600080fd5b506103d06114ef565b34801561045457600080fd5b506102e0610463366004612fa7565b61150c565b34801561047457600080fd5b506102e0610483366004612d8b565b6115b0565b34801561049457600080fd5b506104a86104a3366004612d2a565b611654565b604051610282919061304d565b3480156104c157600080fd5b506102e06104d0366004613111565b6119a5565b3480156104e157600080fd5b506102e0611a4e565b3480156104f657600080fd5b506104ff611a62565b60405161028291906131a8565b34801561051857600080fd5b506102e0611b3c565b34801561052d57600080fd5b506102e061053c3660046131c5565b611b89565b34801561054d57600080fd5b50610556611c2d565b6040516001600160a01b039091168152602001610282565b34801561057a57600080fd5b506102e0610589366004612d5d565b611c62565b34801561059a57600080fd5b506103d06105a9366004612da7565b611d33565b3480156105ba57600080fd5b506105c3611e33565b60405161028291906132d0565b3480156105dc57600080fd5b506102e06105eb366004613111565b611ee8565b3480156105fc57600080fd5b5061061061060b36600461331e565b611f91565b60405161028291906133e3565b34801561062957600080fd5b5061064e604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102829190613445565b34801561066757600080fd5b506102e0610676366004612d8b565b612086565b34801561068757600080fd5b506103d0610696366004612d8b565b612128565b3480156106a757600080fd5b506040805160a080820183526003546001600160a01b039081168352600454811660208085019190915260055482168486015260065482166060808601919091526007548316608080870191909152865161012081018852600854815260095493810193909352600a5496830196909652600b5490820152600c5494810194909452600d54811691840191909152600e54811660c0840152600f54811660e08401526010541661010083015261075a9182565b604051610282929190613458565b34801561077457600080fd5b506103d0610783366004612da7565b61220f565b34801561079457600080fd5b506103d06107a3366004612d2a565b6122a1565b3480156107b457600080fd5b506102e06107c33660046134aa565b6122eb565b3480156107d457600080fd5b506102e06107e33660046134df565b61238f565b3480156107f457600080fd5b506103d0610803366004612da7565b61248f565b34801561081457600080fd5b50610556612522565b34801561082957600080fd5b506002546103d0565b34801561083e57600080fd5b506102e061084d366004612d8b565b61254b565b34801561085e57600080fd5b506102e061086d366004612d2a565b612610565b34801561087e57600080fd5b506102e061088d366004613111565b612695565b604051630ab0adeb60e31b81526000600482018190526001600160a01b03831660248301529073__$e3be7a02cc36c4fc59861378e374d62f33$__906355856f5890604401602060405180830381865af41580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091891906134f1565b92915050565b604051637574819b60e11b8152600090819073__$cff02a526fac95f46ea22f43b5b483056b$__9063eae903369061095c908490879060040161350e565b60006040518083038186803b15801561097457600080fd5b505af4158015610988573d6000803e3d6000fd5b505060405163085bf74b60e21b815273__$cff02a526fac95f46ea22f43b5b483056b$__925063216fdd2c91506109c690600090879060040161350e565b6040805180830381865af41580156109e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a06919061354c565b909250905073__$e3be7a02cc36c4fc59861378e374d62f33$__6344a8b1476000610a376040870160208801612d2a565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015610a7c57600080fd5b505af4158015610a90573d6000803e3d6000fd5b50505050915091565b60405163296e0ffd60e21b815273__$95d87730e373cebb4ca4c1a2f026cb5496$__9063a5b83ff490610ad3906000908590600401613570565b60006040518083038186803b158015610aeb57600080fd5b505af4158015610aff573d6000803e3d6000fd5b505060405163dde714c560e01b815273__$95d87730e373cebb4ca4c1a2f026cb5496$__925063dde714c59150610b3d906000908590600401613570565b60006040518083038186803b158015610b5557600080fd5b505af4158015610b69573d6000803e3d6000fd5b5073__$e3be7a02cc36c4fc59861378e374d62f33$__92506344a8b147915060009050610b9c6040850160208601612d2a565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015b60006040518083038186803b158015610be257600080fd5b505af4158015610bf6573d6000803e3d6000fd5b5050505050565b60008073__$e3be7a02cc36c4fc59861378e374d62f33$__637919f151909160006001018581548110610c3257610c326135a4565b90600052602060002090600702016040518363ffffffff1660e01b8152600401610c66929190918252602082015260400190565b602060405180830381865af4158015610c83573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091891906135ba565b600554600e546040516370a0823160e01b81526001600160a01b039182166004820152600092839283929116906370a0823190602401602060405180830381865afa158015610cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1e91906135db565b600654600e546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015610d6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8e91906135db565b600754600e546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a08231906024015b602060405180830381865afa158015610ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dff91906135db565b925092509250909192565b60008060006001018381548110610e2357610e236135a4565b600091825260208083206040805160e0810182526007949094029091018054845260018101549284019290925260028201546001600160a01b0390811684830152600383015416606084018190526004808401546080860152600584015460ff16151560a086015260069093015460c08501529051630ab0adeb60e31b8152918201939093526024810192909252915073__$e3be7a02cc36c4fc59861378e374d62f33$__906355856f5890604401602060405180830381865af4158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1391906134f1565b9392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610f605750825b905060008267ffffffffffffffff166001148015610f7d5750303b155b905081158015610f8b575080155b15610fa95760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610fd357845460ff60401b1916600160401b1785555b60405163a692d30d60e01b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063a692d30d9061100f906000908b908b906004016135f4565b60006040518083038186803b15801561102757600080fd5b505af415801561103b573d6000803e3d6000fd5b5061105692506110519150506020890189612d2a565b61273e565b61105e61274f565b61106661274f565b61106e61274f565b604051630bbe48b760e41b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063bbe48b70906110aa906000908b908b906004016135f4565b60006040518083038186803b1580156110c257600080fd5b505af41580156110d6573d6000803e3d6000fd5b50505050831561112057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b600061091860006001018381548110611144576111446135a4565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015260c001516000191490565b60405163010cc09b60e21b815273__$d7ed34c1233366b4d2093a06a83503a127$__90630433026c906111fc906000908590600401613754565b60006040518083038186803b15801561121457600080fd5b505af4158015611228573d6000803e3d6000fd5b505060405163b8359e9760e01b815273__$d7ed34c1233366b4d2093a06a83503a127$__925063b8359e979150611266906000908590600401613754565b60006040518083038186803b15801561127e57600080fd5b505af4158015611292573d6000803e3d6000fd5b50506040516344a8b14760e01b81526000600482015233602482015273__$e3be7a02cc36c4fc59861378e374d62f33$__92506344a8b1479150604401610bca565b6005546010546040516370a0823160e01b81526001600160a01b039182166004820152600092839283929116906370a0823190602401602060405180830381865afa158015611327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134b91906135db565b6006546010546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb91906135db565b6007546010546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401610dbe565b6113f7612757565b611400826127fc565b61140a8282612804565b5050565b6114626040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600015158152602001600081525090565b6001805483908110611476576114766135a4565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015292915050565b60006114f96128c6565b50600080516020613a7d83398151915290565b604051632cc4a87f60e11b815273__$0e7f22a922c80796059a4f902a991c4252$__9063598950fe90611546906000908590600401613854565b60006040518083038186803b15801561155e57600080fd5b505af4158015611572573d6000803e3d6000fd5b505060405163020a460760e61b815273__$0e7f22a922c80796059a4f902a991c4252$__925063829181c09150610bca906000908590600401613854565b604051638046123560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__906380461235906115ea906000908590600401613754565b60006040518083038186803b15801561160257600080fd5b505af4158015611616573d6000803e3d6000fd5b50506040516387e2411560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__92506387e241159150610bca906000908590600401613754565b61165c612c46565b604080516001600160a01b038416600090815260208181529083902061014083018452805460e084019081526001820154610100850152845160028301805460609581028301860188529682018781529596879660a088019687959487946101208b019491939092849284918401828280156116f757602002820191906000526020600020905b8154815260200190600101908083116116e3575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561174f57602002820191906000526020600020905b81548152602001906001019080831161173b575b505050919092525050509052508152604080518082018252600484018054825282516005860180546020808202840160609081018852968401828152978101979596949590870194849284918401828280156117ca57602002820191906000526020600020905b8154815260200190600101908083116117b6575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561182257602002820191906000526020600020905b81548152602001906001019080831161180e575b5050509190925250505090525090525081526001600160a01b0384811660208301819052600554604080516370a0823160e01b8152600481019390935290930192909116906370a0823190602401602060405180830381865afa15801561188d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b191906135db565b81526006546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611903573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192791906135db565b81526007546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199d91906135db565b905292915050565b6040516351b4085960e01b8152600060048201528135602482015273__$d8cad9693442357ae3bd536a88ac8b2fda$__906351b408599060440160006040518083038186803b1580156119f757600080fd5b505af4158015611a0b573d6000803e3d6000fd5b505060405163aa89ae9f60e01b8152600060048201528335602482015273__$d8cad9693442357ae3bd536a88ac8b2fda$__925063aa89ae9f9150604401610bca565b611a5661290f565b611a606000612941565b565b611ad5604051806101200160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b50604080516101208101825260085481526009546020820152600a5491810191909152600b546060820152600c546080820152600d546001600160a01b0390811660a0830152600e54811660c0830152600f54811660e08301526010541661010082015290565b3380611b46612522565b6001600160a01b031614611b7d5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b611b8681612941565b50565b604051634721523f60e11b815273__$8d793199f9136f957f886f33c2c7f39b75$__90638e42a47e90611bc3906000908590600401613892565b60006040518083038186803b158015611bdb57600080fd5b505af4158015611bef573d6000803e3d6000fd5b5050604051633ebc18a560e01b815273__$8d793199f9136f957f886f33c2c7f39b75$__9250633ebc18a59150611266906000908590600401613892565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b60408051634bc1120160e01b815260006004820152823560248201526020830135604482015290820135606482015273__$ef4190de80c3c7f10088bb7cf8a0baddca$__90634bc112019060840160006040518083038186803b158015611cc857600080fd5b505af4158015611cdc573d6000803e3d6000fd5b5050604080516332f4053b60e01b815260006004820152843560248201526020850135604482015290840135606482015273__$ef4190de80c3c7f10088bb7cf8a0baddca$__92506332f4053b9150608401610bca565b60008060006001018381548110611d4c57611d4c6135a4565b600091825260208083206040805160e08101825260079094029091018054845260018101549284019290925260028201546001600160a01b039081168483015260038301541660608401526004808301546080850152600583015460ff16151560a085015260069092015460c08401525163f711fb6960e01b815291935073__$e3be7a02cc36c4fc59861378e374d62f33$__9263f711fb6992611df292869101613920565b602060405180830381865af4158015611e0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1391906135db565b60606000600101805480602002602001604051908101604052809291908181526020016000905b82821015611edf5760008481526020908190206040805160e08101825260078602909201805483526001808201548486015260028201546001600160a01b03908116938501939093526003820154909216606084015260048101546080840152600581015460ff16151560a08401526006015460c08301529083529092019101611e5a565b50505050905090565b60405163a2c595c760e01b8152600060048201528135602482015273__$a7e4e07d6d9ebec01c8ddb11fc157c165f$__9063a2c595c79060440160006040518083038186803b158015611f3a57600080fd5b505af4158015611f4e573d6000803e3d6000fd5b5050604051630c29914560e41b8152600060048201528335602482015273__$a7e4e07d6d9ebec01c8ddb11fc157c165f$__925063c29914509150604401610bca565b60608167ffffffffffffffff811115611fac57611fac612e2f565b604051908082528060200260200182016040528015611fdf57816020015b6060815260200190600190039081611fca5790505b50905060005b8281101561207f5761204f30858584818110612003576120036135a4565b90506020028101906120159190613935565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061297992505050565b828281518110612061576120616135a4565b6020026020010181905250808061207790613992565b915050611fe5565b5092915050565b6040516210aa0b60e31b815273__$7dc37f9f4797eb854780a74171eb2f4993$__9062855058906120be9060009085906004016139ab565b60006040518083038186803b1580156120d657600080fd5b505af41580156120ea573d6000803e3d6000fd5b50506040516364140a8360e01b815273__$7dc37f9f4797eb854780a74171eb2f4993$__92506364140a839150610bca9060009085906004016139ab565b604051633eaefba560e11b815260009073__$31eeffd6d129c97860b62769217ca29194$__90637d5df74a9061216490849086906004016139ab565b60006040518083038186803b15801561217c57600080fd5b505af4158015612190573d6000803e3d6000fd5b505060405163e3e32d5160e01b815273__$31eeffd6d129c97860b62769217ca29194$__925063e3e32d5191506121ce9060009086906004016139ab565b602060405180830381865af41580156121eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091891906135db565b60006109186000600101838154811061222a5761222a6135a4565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c08201525190565b60405163046dbd1360e11b81526000600482018190526001600160a01b03831660248301529073__$e3be7a02cc36c4fc59861378e374d62f33$__906308db7a26906044016121ce565b60405163c00a512760e01b815273__$3ea2d971f4db75ed849199519b7bbdd8b6$__9063c00a5127906123259060009085906004016139c9565b60006040518083038186803b15801561233d57600080fd5b505af4158015612351573d6000803e3d6000fd5b505060405163af54844160e01b815273__$3ea2d971f4db75ed849199519b7bbdd8b6$__925063af5484419150610bca9060009085906004016139c9565b6040516355e37cf560e11b815273__$07e86bcef4998d4b87078f4c72fdc88121$__9063abc6f9ea906123c99060009085906004016139fd565b60006040518083038186803b1580156123e157600080fd5b505af41580156123f5573d6000803e3d6000fd5b5050604051635fc2d93160e01b815273__$07e86bcef4998d4b87078f4c72fdc88121$__9250635fc2d93191506124339060009085906004016139fd565b60006040518083038186803b15801561244b57600080fd5b505af415801561245f573d6000803e3d6000fd5b5073__$e3be7a02cc36c4fc59861378e374d62f33$__92506344a8b147915060009050610b9c6020850185612d2a565b6000610918600060010183815481106124aa576124aa6135a4565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c08201526129ef565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00611c52565b61255361290f565b60405163e57980dd60e01b815260006004820152813560248201526020820135604482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063e57980dd9060640160006040518083038186803b1580156125af57600080fd5b505af41580156125c3573d6000803e3d6000fd5b5050604051634752b3b360e01b815260006004820152833560248201526020840135604482015273__$32fe41b939f9fd8fb0430b5111f401f35c$__9250634752b3b39150606401610bca565b61261861290f565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825561265c611c2d565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b604051635792057f60e11b8152600060048201528135602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__9063af240afe9060440160006040518083038186803b1580156126e757600080fd5b505af41580156126fb573d6000803e3d6000fd5b50506040516320e9b9f960e11b8152600060048201528335602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$";

type SizeConstructorParams =
  | [linkLibraryAddresses: SizeLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SizeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Size__factory extends ContractFactory {
  constructor(...args: SizeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Size__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: SizeLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e3be7a02cc36c4fc59861378e374d62f33\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Common.sol:Common"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cff02a526fac95f46ea22f43b5b483056b\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LiquidateLoanWithReplacement.sol:LiquidateLoanWithReplacement"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$95d87730e373cebb4ca4c1a2f026cb5496\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/BorrowerExit.sol:BorrowerExit"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$34e5abf8aed44cb09d2bd12ec9cc797973\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Initialize.sol:Initialize"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d7ed34c1233366b4d2093a06a83503a127\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Withdraw.sol:Withdraw"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0e7f22a922c80796059a4f902a991c4252\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LendAsLimitOrder.sol:LendAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$102e258b2685b09f31e1bdc044a973265c\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Deposit.sol:Deposit"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d8cad9693442357ae3bd536a88ac8b2fda\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/SelfLiquidateLoan.sol:SelfLiquidateLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8d793199f9136f957f886f33c2c7f39b75\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ef4190de80c3c7f10088bb7cf8a0baddca\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Compensate.sol:Compensate"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a7e4e07d6d9ebec01c8ddb11fc157c165f\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/MoveToVariablePool.sol:MoveToVariablePool"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7dc37f9f4797eb854780a74171eb2f4993\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Repay.sol:Repay"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$31eeffd6d129c97860b62769217ca29194\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LiquidateLoan.sol:LiquidateLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3ea2d971f4db75ed849199519b7bbdd8b6\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$07e86bcef4998d4b87078f4c72fdc88121\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LendAsMarketOrder.sol:LendAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$32fe41b939f9fd8fb0430b5111f401f35c\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/UpdateConfig.sol:UpdateConfig"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$65756fc1cb7d5518f865a4f2165258b0ec\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Claim.sol:Claim"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Size> {
    return super.deploy(overrides || {}) as Promise<Size>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Size {
    return super.attach(address) as Size;
  }
  override connect(signer: Signer): Size__factory {
    return super.connect(signer) as Size__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SizeInterface {
    return new utils.Interface(_abi) as SizeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Size {
    return new Contract(address, _abi, signerOrProvider) as Size;
  }
}

export interface SizeLibraryAddresses {
  ["src/libraries/actions/Common.sol:Common"]: string;
  ["src/libraries/actions/LiquidateLoanWithReplacement.sol:LiquidateLoanWithReplacement"]: string;
  ["src/libraries/actions/BorrowerExit.sol:BorrowerExit"]: string;
  ["src/libraries/actions/Initialize.sol:Initialize"]: string;
  ["src/libraries/actions/Withdraw.sol:Withdraw"]: string;
  ["src/libraries/actions/LendAsLimitOrder.sol:LendAsLimitOrder"]: string;
  ["src/libraries/actions/Deposit.sol:Deposit"]: string;
  ["src/libraries/actions/SelfLiquidateLoan.sol:SelfLiquidateLoan"]: string;
  ["src/libraries/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"]: string;
  ["src/libraries/actions/Compensate.sol:Compensate"]: string;
  ["src/libraries/actions/MoveToVariablePool.sol:MoveToVariablePool"]: string;
  ["src/libraries/actions/Repay.sol:Repay"]: string;
  ["src/libraries/actions/LiquidateLoan.sol:LiquidateLoan"]: string;
  ["src/libraries/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"]: string;
  ["src/libraries/actions/LendAsMarketOrder.sol:LendAsMarketOrder"]: string;
  ["src/libraries/actions/UpdateConfig.sol:UpdateConfig"]: string;
  ["src/libraries/actions/Claim.sol:Claim"]: string;
}
