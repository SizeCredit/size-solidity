/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Size, SizeInterface } from "../Size";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "activeLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "activeVariableLoans",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "borrowAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowAsMarketOrderParams",
        components: [
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "virtualCollateralLoanIds",
            type: "uint256[]",
            internalType: "uint256[]",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "borrowerExit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct BorrowerExitParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowerToExitTo",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct ClaimParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "collateralPercentagePremiumToBorrower",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "collateralPercentagePremiumToLiquidator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "collateralPercentagePremiumToProtocol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "collateralRatio",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "crLiquidation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "crOpening",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "deposit",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct DepositParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAssignedCollateral",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getBorrowOffer",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct BorrowOffer",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getConfig",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Config",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "contract IPriceFeed",
          },
          {
            name: "variablePool",
            type: "address",
            internalType: "address",
          },
          {
            name: "insurance",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getCredit",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDebt",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDueDate",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getFeeRecipient",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoan",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Loan",
        components: [
          {
            name: "faceValue",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "faceValueExited",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "lender",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "repaid",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "folId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanOffer",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct LoanOffer",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxDueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getLoanStatus",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "enum LoanStatus",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getProtocolVault",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUserView",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct UserView",
        components: [
          {
            name: "user",
            type: "tuple",
            internalType: "struct User",
            components: [
              {
                name: "loanOffer",
                type: "tuple",
                internalType: "struct LoanOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "maxDueDate",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
              {
                name: "borrowOffer",
                type: "tuple",
                internalType: "struct BorrowOffer",
                components: [
                  {
                    name: "maxAmount",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "curveRelativeTime",
                    type: "tuple",
                    internalType: "struct YieldCurve",
                    components: [
                      {
                        name: "timeBuckets",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                      {
                        name: "rates",
                        type: "uint256[]",
                        internalType: "uint256[]",
                      },
                    ],
                  },
                ],
              },
            ],
          },
          {
            name: "collateralAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrowAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "debtAmount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct InitializeParams",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrowAsset",
            type: "address",
            internalType: "address",
          },
          {
            name: "collateralToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "borrowToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "debtToken",
            type: "address",
            internalType: "address",
          },
          {
            name: "protocolVault",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "extraParams",
        type: "tuple",
        internalType: "struct InitializeExtraParams",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isFOL",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isLiquidatable",
    inputs: [
      {
        name: "loanId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lendAsLimitOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsLimitOrderParams",
        components: [
          {
            name: "maxAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "maxDueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "curveRelativeTime",
            type: "tuple",
            internalType: "struct YieldCurve",
            components: [
              {
                name: "timeBuckets",
                type: "uint256[]",
                internalType: "uint256[]",
              },
              {
                name: "rates",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "lendAsMarketOrder",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LendAsMarketOrderParams",
        components: [
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "dueDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exactAmountIn",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateLoanWithReplacement",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct LiquidateLoanWithReplacementParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "borrower",
            type: "address",
            internalType: "address",
          },
          {
            name: "minimumCollateralRatio",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "liquidatorProfitCollateralAsset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "liquidatorProfitBorrowAsset",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "minimumCredit",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "moveToVariablePool",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct MoveToVariablePoolParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "multicall",
    inputs: [
      {
        name: "data",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    outputs: [
      {
        name: "results",
        type: "bytes[]",
        internalType: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "repay",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct RepayParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "selfLiquidateLoan",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct SelfLiquidateLoanParams",
        components: [
          {
            name: "loanId",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "state",
    inputs: [],
    outputs: [
      {
        name: "tokens",
        type: "tuple",
        internalType: "struct Tokens",
        components: [
          {
            name: "collateralAsset",
            type: "address",
            internalType: "contract IERC20Metadata",
          },
          {
            name: "borrowAsset",
            type: "address",
            internalType: "contract IERC20Metadata",
          },
          {
            name: "collateralToken",
            type: "address",
            internalType: "contract CollateralToken",
          },
          {
            name: "borrowToken",
            type: "address",
            internalType: "contract BorrowToken",
          },
          {
            name: "debtToken",
            type: "address",
            internalType: "contract DebtToken",
          },
        ],
      },
      {
        name: "config",
        type: "tuple",
        internalType: "struct Config",
        components: [
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "priceFeed",
            type: "address",
            internalType: "contract IPriceFeed",
          },
          {
            name: "variablePool",
            type: "address",
            internalType: "address",
          },
          {
            name: "insurance",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateConfig",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct UpdateConfigParams",
        components: [
          {
            name: "priceFeed",
            type: "address",
            internalType: "address",
          },
          {
            name: "feeRecipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "crOpening",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "crLiquidation",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToLiquidator",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "collateralPercentagePremiumToProtocol",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minimumCredit",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct WithdrawParams",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051613d7962000104600039600081816129ee01528181612a170152612b5d0152613d796000f3fe6080604052600436106102ae5760003560e01c806363b08c1a11610175578063c17c32f6116100dc578063d54a491411610095578063eff69d951161006f578063eff69d9514610923578063f128aa6e14610938578063f2fde38b14610965578063f45bf01c1461098557600080fd5b8063d54a4914146108ce578063da304e4d146108ee578063e30c39781461090e57600080fd5b8063c17c32f61461075f578063c19d93fb1461077f578063c3f909d41461084c578063c9dd1f3c1461086e578063ca40742c1461088e578063d49dd24f146108ae57600080fd5b80639e7d09b71161012e5780639e7d09b71461067d578063a778ab0414610692578063a9f3f078146106bf578063ac88180f146106d4578063ac9650d8146106f4578063ad3cb1cc1461072157600080fd5b806363b08c1a146105c6578063715018a6146105e657806379ba5097146105fb5780637f2c2aba14610610578063872b7d26146106305780638da5cb5b1461065057600080fd5b8063421a80211161021957806352d1902d116101d257806352d1902d1461050f5780635aa266c9146105245780635c0f0318146105445780635c7a2a80146105645780635cbc51eb1461058457806360a7af43146105b157600080fd5b8063421a80211461045557806344ea3bb41461046a57806344eea5881461047f5780634ccb20c01461049f5780634f1ef286146104cf578063504006ca146104e257600080fd5b806324c381831161026b57806324c38183146103ab57806332e7fdef146103cb5780633c565417146103eb5780633ce6a6a81461040b5780633d8856811461042b578063416b40c71461044057600080fd5b8063042e02cf146102b357806308631e40146102e85780630e0a9f421461031d57806318719d5f1461033c5780631c4fd41c1461035e578063211a44431461038b575b600080fd5b3480156102bf57600080fd5b506102d36102ce366004612f93565b6109a5565b60405190151581526020015b60405180910390f35b3480156102f457600080fd5b50610308610303366004612fc6565b610a32565b604080519283526020830191909152016102df565b34801561032957600080fd5b50600c545b6040519081526020016102df565b34801561034857600080fd5b5061035c610357366004612ff4565b610bad565b005b34801561036a57600080fd5b5061037e610379366004613010565b610d11565b6040516102df9190613029565b34801561039757600080fd5b506102d36103a6366004613010565b610e0a565b3480156103b757600080fd5b5061035c6103c6366004613051565b610f1a565b3480156103d757600080fd5b506102d36103e6366004613010565b611129565b3480156103f757600080fd5b5061035c610406366004612ff4565b6111e4565b34801561041757600080fd5b5061032e610426366004613010565b6112f6565b34801561043757600080fd5b5060085461032e565b34801561044c57600080fd5b5060015461032e565b34801561046157600080fd5b50600b5461032e565b34801561047657600080fd5b5061032e6113f6565b34801561048b57600080fd5b5061032e61049a366004613010565b611421565b3480156104ab57600080fd5b506104b4611451565b604080519384526020840192909252908201526060016102df565b61035c6104dd366004613108565b6115b4565b3480156104ee57600080fd5b506105026104fd366004613010565b6115d3565b6040516102df9190613202565b34801561051b57600080fd5b5061032e6116b4565b34801561053057600080fd5b5061035c61053f366004613222565b6116d1565b34801561055057600080fd5b5061035c61055f36600461323e565b611778565b34801561057057600080fd5b5061035c61057f366004612ff4565b61181c565b34801561059057600080fd5b506105a461059f366004612f93565b6118c0565b6040516102df919061332c565b3480156105bd57600080fd5b50600a5461032e565b3480156105d257600080fd5b5061035c6105e1366004613222565b611c07565b3480156105f257600080fd5b5061035c611cb0565b34801561060757600080fd5b5061035c611cc4565b34801561061c57600080fd5b5061035c61062b36600461339b565b611d11565b34801561063c57600080fd5b5061035c61064b3660046133bb565b611dbd565b34801561065c57600080fd5b50610665611e61565b6040516001600160a01b0390911681526020016102df565b34801561068957600080fd5b506104b4611e96565b34801561069e57600080fd5b506106b26106ad366004612f93565b611fb1565b6040516102df91906134c6565b3480156106cb57600080fd5b5060095461032e565b3480156106e057600080fd5b5061035c6106ef366004613222565b6120aa565b34801561070057600080fd5b5061071461070f3660046134d9565b612153565b6040516102df919061359e565b34801561072d57600080fd5b50610752604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102df9190613600565b34801561076b57600080fd5b5061032e61077a366004612ff4565b612248565b34801561078b57600080fd5b506040805160a080820183526003546001600160a01b039081168352600454811660208085019190915260055482168486015260065482166060808601919091526007548316608080870191909152865161012081018852600854815260095493810193909352600a5496830196909652600b5490820152600c5494810194909452600d54811691840191909152600e54811660c0840152600f54811660e08401526010541661010083015261083e9182565b6040516102df92919061368e565b34801561085857600080fd5b50610861612345565b6040516102df91906136e0565b34801561087a57600080fd5b5061032e610889366004613010565b61241f565b34801561089a57600080fd5b5061032e6108a9366004612f93565b6124da565b3480156108ba57600080fd5b5061035c6108c93660046136ef565b612524565b3480156108da57600080fd5b5061035c6108e9366004613724565b6125c8565b3480156108fa57600080fd5b5061032e610909366004613010565b6126c8565b34801561091a57600080fd5b50610665612783565b34801561092f57600080fd5b5060025461032e565b34801561094457600080fd5b50610958610953366004612f93565b6127ac565b6040516102df9190613736565b34801561097157600080fd5b5061035c610980366004612f93565b61289c565b34801561099157600080fd5b5061035c6109a0366004613222565b612921565b604051630ab0adeb60e31b81526000600482018190526001600160a01b03831660248301529073__$e3be7a02cc36c4fc59861378e374d62f33$__906355856f58906044015b602060405180830381865af4158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2c9190613749565b92915050565b604051637574819b60e11b8152600090819073__$cff02a526fac95f46ea22f43b5b483056b$__9063eae9033690610a709084908790600401613766565b60006040518083038186803b158015610a8857600080fd5b505af4158015610a9c573d6000803e3d6000fd5b505060405163085bf74b60e21b815273__$cff02a526fac95f46ea22f43b5b483056b$__925063216fdd2c9150610ada906000908790600401613766565b6040805180830381865af4158015610af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a91906137a4565b909250905073__$e3be7a02cc36c4fc59861378e374d62f33$__6344a8b1476000610b4b6040870160208801612f93565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b0316602482015260440160006040518083038186803b158015610b9057600080fd5b505af4158015610ba4573d6000803e3d6000fd5b50505050915091565b60405163296e0ffd60e21b815273__$95d87730e373cebb4ca4c1a2f026cb5496$__9063a5b83ff490610be79060009085906004016137c8565b60006040518083038186803b158015610bff57600080fd5b505af4158015610c13573d6000803e3d6000fd5b505060405163dde714c560e01b815273__$95d87730e373cebb4ca4c1a2f026cb5496$__925063dde714c59150610c519060009085906004016137c8565b60006040518083038186803b158015610c6957600080fd5b505af4158015610c7d573d6000803e3d6000fd5b5073__$e3be7a02cc36c4fc59861378e374d62f33$__92506344a8b147915060009050610cb06040850160208601612f93565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b031660248201526044015b60006040518083038186803b158015610cf657600080fd5b505af4158015610d0a573d6000803e3d6000fd5b5050505050565b60008073__$e3be7a02cc36c4fc59861378e374d62f33$__63a16e10ea909160006001018581548110610d4657610d466137fc565b90600052602060002090600702016040518363ffffffff1660e01b8152600401610dc9929190918252805460208301526001810154604083015260028101546001600160a01b0390811660608401526003820154166080830152600481015460a0830152600581015460ff16151560c08301526006015460e08201526101000190565b602060405180830381865af4158015610de6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2c9190613812565b60008060006001018381548110610e2357610e236137fc565b600091825260208083206040805160e0810182526007949094029091018054845260018101549284019290925260028201546001600160a01b0390811684830152600383015416606084018190526004808401546080860152600584015460ff16151560a086015260069093015460c08501529051630ab0adeb60e31b8152918201939093526024810192909252915073__$e3be7a02cc36c4fc59861378e374d62f33$__906355856f5890604401602060405180830381865af4158015610eef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f139190613749565b9392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff16600081158015610f605750825b905060008267ffffffffffffffff166001148015610f7d5750303b155b905081158015610f8b575080155b15610fa95760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610fd357845460ff60401b1916600160401b1785555b60405163a692d30d60e01b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063a692d30d9061100f906000908b908b90600401613833565b60006040518083038186803b15801561102757600080fd5b505af415801561103b573d6000803e3d6000fd5b5061105692506110519150506020890189612f93565b6129ca565b61105e6129db565b6110666129db565b61106e6129db565b604051630bbe48b760e41b815273__$34e5abf8aed44cb09d2bd12ec9cc797973$__9063bbe48b70906110aa906000908b908b90600401613833565b60006040518083038186803b1580156110c257600080fd5b505af41580156110d6573d6000803e3d6000fd5b50505050831561112057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6000806001018281548110611140576111406137fc565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b039081168383015260038401541660608301526004808401546080840152600584015460ff16151560a084015260069093015460c0830152516343769a5160e01b815273__$137de846162d19becd7adae071bc6b8643$__926343769a51926109eb92909101613202565b60405163010cc09b60e21b815273__$d7ed34c1233366b4d2093a06a83503a127$__90630433026c9061121e906000908590600401613993565b60006040518083038186803b15801561123657600080fd5b505af415801561124a573d6000803e3d6000fd5b505060405163b8359e9760e01b815273__$d7ed34c1233366b4d2093a06a83503a127$__925063b8359e979150611288906000908590600401613993565b60006040518083038186803b1580156112a057600080fd5b505af41580156112b4573d6000803e3d6000fd5b50506040516344a8b14760e01b81526000600482015233602482015273__$e3be7a02cc36c4fc59861378e374d62f33$__92506344a8b1479150604401610cde565b6000806000600101838154811061130f5761130f6137fc565b600091825260208083206040805160e08101825260079094029091018054845260018101549284019290925260028201546001600160a01b039081168483015260038301541660608401526004808301546080850152600583015460ff16151560a085015260069092015460c08401525163024f702760e21b815291935073__$e3be7a02cc36c4fc59861378e374d62f33$__9263093dc09c926113b5928691016139a7565b602060405180830381865af41580156113d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1391906139bc565b600a54600b546000919061141290670de0b6b3a76400006139eb565b61141c91906139eb565b905090565b6000806001018281548110611438576114386137fc565b9060005260206000209060070201600401549050919050565b6005546010546040516370a0823160e01b81526001600160a01b039182166004820152600092839283929116906370a0823190602401602060405180830381865afa1580156114a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c891906139bc565b6006546010546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015611514573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153891906139bc565b6007546010546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a08231906024015b602060405180830381865afa158015611585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a991906139bc565b925092509250909192565b6115bc6129e3565b6115c582612a88565b6115cf8282612a90565b5050565b6116276040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600015158152602001600081525090565b600180548390811061163b5761163b6137fc565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b0390811691830191909152600383015416606082015260048201546080820152600582015460ff16151560a082015260069091015460c082015292915050565b60006116be612b52565b50600080516020613d2483398151915290565b6040516210aa0b60e31b8152600060048201528135602482015273__$7dc37f9f4797eb854780a74171eb2f4993$__90628550589060440160006040518083038186803b15801561172157600080fd5b505af4158015611735573d6000803e3d6000fd5b50506040516364140a8360e01b8152600060048201528335602482015273__$7dc37f9f4797eb854780a74171eb2f4993$__92506364140a839150604401610cde565b604051632cc4a87f60e11b815273__$0e7f22a922c80796059a4f902a991c4252$__9063598950fe906117b2906000908590600401613aea565b60006040518083038186803b1580156117ca57600080fd5b505af41580156117de573d6000803e3d6000fd5b505060405163020a460760e61b815273__$0e7f22a922c80796059a4f902a991c4252$__925063829181c09150610cde906000908590600401613aea565b604051638046123560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__90638046123590611856906000908590600401613993565b60006040518083038186803b15801561186e57600080fd5b505af4158015611882573d6000803e3d6000fd5b50506040516387e2411560e01b815273__$102e258b2685b09f31e1bdc044a973265c$__92506387e241159150610cde906000908590600401613993565b6118c8612ebf565b604080516001600160a01b038416600090815260208181529083902061012083018452805460c08401908152600182015460e08501528451600283018054606095810283018601885296820187815295968796608088019687959487946101008b0194919390928492849184018282801561196257602002820191906000526020600020905b81548152602001906001019080831161194e575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156119ba57602002820191906000526020600020905b8154815260200190600101908083116119a6575b50505091909252505050905250815260408051808201825260048401805482528251600586018054602080820284016060908101885296840182815297810197959694959087019484928491840182828015611a3557602002820191906000526020600020905b815481526020019060010190808311611a21575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015611a8d57602002820191906000526020600020905b815481526020019060010190808311611a79575b5050509190925250505090525090525081526005546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1391906139bc565b81526006546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b8991906139bc565b81526007546040516370a0823160e01b81526001600160a01b038681166004830152602090930192909116906370a0823190602401602060405180830381865afa158015611bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bff91906139bc565b905292915050565b6040516351b4085960e01b8152600060048201528135602482015273__$d8cad9693442357ae3bd536a88ac8b2fda$__906351b408599060440160006040518083038186803b158015611c5957600080fd5b505af4158015611c6d573d6000803e3d6000fd5b505060405163aa89ae9f60e01b8152600060048201528335602482015273__$d8cad9693442357ae3bd536a88ac8b2fda$__925063aa89ae9f9150604401610cde565b611cb8612b9b565b611cc26000612bcd565b565b3380611cce612783565b6001600160a01b031614611d055760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b611d0e81612bcd565b50565b611d19612b9b565b60405163e57980dd60e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9063e57980dd90611d53906000908590600401613b28565b60006040518083038186803b158015611d6b57600080fd5b505af4158015611d7f573d6000803e3d6000fd5b5050604051634752b3b360e01b815273__$32fe41b939f9fd8fb0430b5111f401f35c$__9250634752b3b39150610cde906000908590600401613b28565b604051634721523f60e11b815273__$8d793199f9136f957f886f33c2c7f39b75$__90638e42a47e90611df7906000908590600401613b95565b60006040518083038186803b158015611e0f57600080fd5b505af4158015611e23573d6000803e3d6000fd5b5050604051633ebc18a560e01b815273__$8d793199f9136f957f886f33c2c7f39b75$__9250633ebc18a59150611288906000908590600401613b95565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b600554600e546040516370a0823160e01b81526001600160a01b039182166004820152600092839283929116906370a0823190602401602060405180830381865afa158015611ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0d91906139bc565b600654600e546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015611f59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7d91906139bc565b600754600e546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401611568565b611fb9612eed565b6001600160a01b038216600090815260208181526040918290208251606080820185528254825260018301548285015284516002840180549586028201830187528187018681529396949594870194919390928492849184018282801561203f57602002820191906000526020600020905b81548152602001906001019080831161202b575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561209757602002820191906000526020600020905b815481526020019060010190808311612083575b5050509190925250505090525092915050565b60405163a2c595c760e01b8152600060048201528135602482015273__$a7e4e07d6d9ebec01c8ddb11fc157c165f$__9063a2c595c79060440160006040518083038186803b1580156120fc57600080fd5b505af4158015612110573d6000803e3d6000fd5b5050604051630c29914560e41b8152600060048201528335602482015273__$a7e4e07d6d9ebec01c8ddb11fc157c165f$__925063c29914509150604401610cde565b60608167ffffffffffffffff81111561216e5761216e613098565b6040519080825280602002602001820160405280156121a157816020015b606081526020019060019003908161218c5790505b50905060005b8281101561224157612211308585848181106121c5576121c56137fc565b90506020028101906121d79190613c23565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612c0592505050565b828281518110612223576122236137fc565b6020026020010181905250808061223990613c6a565b9150506121a7565b5092915050565b604051633eaefba560e11b815260006004820181905282356024830152602083013560448301529073__$31eeffd6d129c97860b62769217ca29194$__90637d5df74a9060640160006040518083038186803b1580156122a757600080fd5b505af41580156122bb573d6000803e3d6000fd5b505060405163e3e32d5160e01b815260006004820152843560248201526020850135604482015273__$31eeffd6d129c97860b62769217ca29194$__925063e3e32d5191506064015b602060405180830381865af4158015612321573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2c91906139bc565b6123b8604051806101200160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b50604080516101208101825260085481526009546020820152600a5491810191909152600b546060820152600c546080820152600d546001600160a01b0390811660a0830152600e54811660c0830152600f54811660e08301526010541661010082015290565b6000806001018281548110612436576124366137fc565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b039081168383015260038401541660608301526004808401546080840152600584015460ff16151560a084015260069093015460c08301525163a75bd97f60e01b815273__$137de846162d19becd7adae071bc6b8643$__9263a75bd97f9261230492909101613202565b60405163046dbd1360e11b81526000600482018190526001600160a01b03831660248301529073__$e3be7a02cc36c4fc59861378e374d62f33$__906308db7a2690604401612304565b60405163c00a512760e01b815273__$3ea2d971f4db75ed849199519b7bbdd8b6$__9063c00a51279061255e906000908590600401613c83565b60006040518083038186803b15801561257657600080fd5b505af415801561258a573d6000803e3d6000fd5b505060405163af54844160e01b815273__$3ea2d971f4db75ed849199519b7bbdd8b6$__925063af5484419150610cde906000908590600401613c83565b6040516355e37cf560e11b815273__$07e86bcef4998d4b87078f4c72fdc88121$__9063abc6f9ea90612602906000908590600401613cb7565b60006040518083038186803b15801561261a57600080fd5b505af415801561262e573d6000803e3d6000fd5b5050604051635fc2d93160e01b815273__$07e86bcef4998d4b87078f4c72fdc88121$__9250635fc2d931915061266c906000908590600401613cb7565b60006040518083038186803b15801561268457600080fd5b505af4158015612698573d6000803e3d6000fd5b5073__$e3be7a02cc36c4fc59861378e374d62f33$__92506344a8b147915060009050610cb06020850185612f93565b60008060010182815481106126df576126df6137fc565b60009182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301546001600160a01b039081168383015260038401541660608301526004808401546080840152600584015460ff16151560a084015260069093015460c0830152516301e8b8ad60e71b815273__$137de846162d19becd7adae071bc6b8643$__9263f45c56809261230492909101613202565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00611e86565b6127b4612f28565b6001600160a01b03821660009081526020818152604091829020825180840184526004820180548252845160059093018054606081870286018101885296850181815293969295870194939192849291849184018282801561203f576020028201919060005260206000209081548152602001906001019080831161202b5750505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156120975760200282019190600052602060002090815481526020019060010190808311612083575050509190925250505090525092915050565b6128a4612b9b565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556128e8611e61565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b604051635792057f60e11b8152600060048201528135602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$__9063af240afe9060440160006040518083038186803b15801561297357600080fd5b505af4158015612987573d6000803e3d6000fd5b50506040516320e9b9f960e11b8152600060048201528335602482015273__$65756fc1cb7d5518f865a4f2165258b0ec$";

type SizeConstructorParams =
  | [linkLibraryAddresses: SizeLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SizeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Size__factory extends ContractFactory {
  constructor(...args: SizeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Size__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: SizeLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e3be7a02cc36c4fc59861378e374d62f33\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Common.sol:Common"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cff02a526fac95f46ea22f43b5b483056b\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LiquidateLoanWithReplacement.sol:LiquidateLoanWithReplacement"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$95d87730e373cebb4ca4c1a2f026cb5496\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/BorrowerExit.sol:BorrowerExit"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$34e5abf8aed44cb09d2bd12ec9cc797973\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Initialize.sol:Initialize"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$137de846162d19becd7adae071bc6b8643\\$__", "g"),
      linkLibraryAddresses["src/libraries/LoanLibrary.sol:LoanLibrary"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d7ed34c1233366b4d2093a06a83503a127\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Withdraw.sol:Withdraw"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$7dc37f9f4797eb854780a74171eb2f4993\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Repay.sol:Repay"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0e7f22a922c80796059a4f902a991c4252\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LendAsLimitOrder.sol:LendAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$102e258b2685b09f31e1bdc044a973265c\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Deposit.sol:Deposit"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$d8cad9693442357ae3bd536a88ac8b2fda\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/SelfLiquidateLoan.sol:SelfLiquidateLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$32fe41b939f9fd8fb0430b5111f401f35c\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/UpdateConfig.sol:UpdateConfig"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8d793199f9136f957f886f33c2c7f39b75\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a7e4e07d6d9ebec01c8ddb11fc157c165f\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/MoveToVariablePool.sol:MoveToVariablePool"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$31eeffd6d129c97860b62769217ca29194\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LiquidateLoan.sol:LiquidateLoan"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3ea2d971f4db75ed849199519b7bbdd8b6\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$07e86bcef4998d4b87078f4c72fdc88121\\$__", "g"),
      linkLibraryAddresses[
        "src/libraries/actions/LendAsMarketOrder.sol:LendAsMarketOrder"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$65756fc1cb7d5518f865a4f2165258b0ec\\$__", "g"),
      linkLibraryAddresses["src/libraries/actions/Claim.sol:Claim"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Size> {
    return super.deploy(overrides || {}) as Promise<Size>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Size {
    return super.attach(address) as Size;
  }
  override connect(signer: Signer): Size__factory {
    return super.connect(signer) as Size__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SizeInterface {
    return new utils.Interface(_abi) as SizeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Size {
    return new Contract(address, _abi, signerOrProvider) as Size;
  }
}

export interface SizeLibraryAddresses {
  ["src/libraries/actions/Common.sol:Common"]: string;
  ["src/libraries/actions/LiquidateLoanWithReplacement.sol:LiquidateLoanWithReplacement"]: string;
  ["src/libraries/actions/BorrowerExit.sol:BorrowerExit"]: string;
  ["src/libraries/actions/Initialize.sol:Initialize"]: string;
  ["src/libraries/LoanLibrary.sol:LoanLibrary"]: string;
  ["src/libraries/actions/Withdraw.sol:Withdraw"]: string;
  ["src/libraries/actions/Repay.sol:Repay"]: string;
  ["src/libraries/actions/LendAsLimitOrder.sol:LendAsLimitOrder"]: string;
  ["src/libraries/actions/Deposit.sol:Deposit"]: string;
  ["src/libraries/actions/SelfLiquidateLoan.sol:SelfLiquidateLoan"]: string;
  ["src/libraries/actions/UpdateConfig.sol:UpdateConfig"]: string;
  ["src/libraries/actions/BorrowAsMarketOrder.sol:BorrowAsMarketOrder"]: string;
  ["src/libraries/actions/MoveToVariablePool.sol:MoveToVariablePool"]: string;
  ["src/libraries/actions/LiquidateLoan.sol:LiquidateLoan"]: string;
  ["src/libraries/actions/BorrowAsLimitOrder.sol:BorrowAsLimitOrder"]: string;
  ["src/libraries/actions/LendAsMarketOrder.sol:LendAsMarketOrder"]: string;
  ["src/libraries/actions/Claim.sol:Claim"]: string;
}
