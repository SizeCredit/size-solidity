name: CI

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  test:
    strategy:
      fail-fast: true

    name: Foundry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Format
        run: |
          forge fmt --check
        id: fmt

      - name: Contract sizes
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Test
        run: |
          forge test -vvv
        id: test

  slither:
    strategy:
      fail-fast: true

    name: Slither
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Slither
        uses: crytic/slither-action@v0.3.0
        id: slither
        with:
          fail-on: low

  solhint:
    strategy:
      fail-fast: true

    name: Solhint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install dependencies
        run: npm install

      - name: Run solhint
        run: npm run solhint

  invariants:
    strategy:
      matrix:
        mode: [assertion, property]

    name: Echidna
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Crytic-compile
        run: |
          pip install crytic-compile

      - name: Install Slither
        run: |
          pip install slither-analyzer

      - name: Install Echidna
        run: |
          wget https://github.com/crytic/echidna/releases/download/v2.2.1/echidna-2.2.1-Linux.zip -O echidna.zip
          unzip echidna.zip
          tar -xvkf echidna.tar.gz
          rm echidna.zip echidna.tar.gz
          ./echidna --version

      - name: Echidna ${{ matrix.mode }}
        run: |
          ./echidna . --contract CryticTester --config echidna.yaml --test-mode ${{ matrix.mode }} --corpus-dir corpus --test-limit 10000

  typechain-coverage:
    strategy:
      fail-fast: true

    name: Typechain/Coverage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        run: npm install

      - name: Setup git config
        run: |
          git config --local user.email "dev@size.cash"
          git config --local user.name "Size"

      - name: Coverage
        run: |
          ./script/update_readme_coverage.sh
          git add README.md
          git commit -m "Update coverage [skip ci]" || true

      - name: Typechain
        run: |
          forge build
          npm run typechain
          git add types/
          git commit -m "Update types [skip ci]" || true
        env:
          token: ${{ secrets.SIZE_BOT_PAT }}

      - name: Push
        run: |
          git push https://${{ env.token }}@github.com/${{ github.event.repository.full_name }}.git
        env:
          token: ${{ secrets.SIZE_BOT_PAT }}